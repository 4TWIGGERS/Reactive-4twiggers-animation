{"ast":null,"code":"import { defineAnimation } from \"./util\";\nexport var withSpring = function () {\n  var _f = function _f(toValue, userConfig, callback) {\n    return defineAnimation(toValue, function () {\n      var _f = function _f() {\n        var config = {\n          damping: 10,\n          mass: 1,\n          stiffness: 100,\n          overshootClamping: false,\n          restDisplacementThreshold: 0.01,\n          restSpeedThreshold: 2,\n          velocity: 0\n        };\n        if (userConfig) {\n          Object.keys(userConfig).forEach(function (key) {\n            return config[key] = userConfig[key];\n          });\n        }\n        function spring(animation, now) {\n          var toValue = animation.toValue,\n            lastTimestamp = animation.lastTimestamp,\n            current = animation.current,\n            velocity = animation.velocity;\n          var deltaTime = Math.min(now - lastTimestamp, 64);\n          animation.lastTimestamp = now;\n          var c = config.damping;\n          var m = config.mass;\n          var k = config.stiffness;\n          var v0 = -velocity;\n          var x0 = toValue - current;\n          var zeta = c / (2 * Math.sqrt(k * m));\n          var omega0 = Math.sqrt(k / m);\n          var omega1 = omega0 * Math.sqrt(1 - Math.pow(zeta, 2));\n          var t = deltaTime / 1000;\n          var sin1 = Math.sin(omega1 * t);\n          var cos1 = Math.cos(omega1 * t);\n          var underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n          var underDampedFrag1 = underDampedEnvelope * (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n          var underDampedPosition = toValue - underDampedFrag1;\n          var underDampedVelocity = zeta * omega0 * underDampedFrag1 - underDampedEnvelope * (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n          var criticallyDampedEnvelope = Math.exp(-omega0 * t);\n          var criticallyDampedPosition = toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n          var criticallyDampedVelocity = criticallyDampedEnvelope * (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n          var isOvershooting = function isOvershooting() {\n            if (config.overshootClamping && config.stiffness !== 0) {\n              return current < toValue ? animation.current > toValue : animation.current < toValue;\n            } else {\n              return false;\n            }\n          };\n          var isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n          var isDisplacement = config.stiffness === 0 || Math.abs(toValue - current) < config.restDisplacementThreshold;\n          if (zeta < 1) {\n            animation.current = underDampedPosition;\n            animation.velocity = underDampedVelocity;\n          } else {\n            animation.current = criticallyDampedPosition;\n            animation.velocity = criticallyDampedVelocity;\n          }\n          if (isOvershooting() || isVelocity && isDisplacement) {\n            if (config.stiffness !== 0) {\n              animation.velocity = 0;\n              animation.current = toValue;\n            }\n            animation.lastTimestamp = 0;\n            return true;\n          }\n          return false;\n        }\n        function onStart(animation, value, now, previousAnimation) {\n          animation.current = value;\n          if (previousAnimation) {\n            animation.velocity = previousAnimation.velocity || animation.velocity || 0;\n            animation.lastTimestamp = previousAnimation.lastTimestamp || now;\n          } else {\n            animation.lastTimestamp = now;\n          }\n        }\n        return {\n          onFrame: spring,\n          onStart: onStart,\n          toValue: toValue,\n          velocity: config.velocity || 0,\n          current: toValue,\n          callback: callback,\n          lastTimestamp: 0\n        };\n      };\n      _f._closure = {\n        userConfig: userConfig,\n        toValue: toValue,\n        callback: callback\n      };\n      _f.asString = \"function _f(){const{userConfig,toValue,callback}=jsThis._closure;{const config={damping:10,mass:1,stiffness:100,overshootClamping:false,restDisplacementThreshold:0.01,restSpeedThreshold:2,velocity:0};if(userConfig){Object.keys(userConfig).forEach(function(key){return config[key]=userConfig[key];});}function spring(animation,now){const{toValue:toValue,lastTimestamp:lastTimestamp,current:current,velocity:velocity}=animation;const deltaTime=Math.min(now-lastTimestamp,64);animation.lastTimestamp=now;const c=config.damping;const m=config.mass;const k=config.stiffness;const v0=-velocity;const x0=toValue-current;const zeta=c/(2*Math.sqrt(k*m));const omega0=Math.sqrt(k/m);const omega1=omega0*Math.sqrt(1-Math.pow(zeta,2));const t=deltaTime/1000;const sin1=Math.sin(omega1*t);const cos1=Math.cos(omega1*t);const underDampedEnvelope=Math.exp(-zeta*omega0*t);const underDampedFrag1=underDampedEnvelope*(sin1*((v0+zeta*omega0*x0)/omega1)+x0*cos1);const underDampedPosition=toValue-underDampedFrag1;const underDampedVelocity=zeta*omega0*underDampedFrag1-underDampedEnvelope*(cos1*(v0+zeta*omega0*x0)-omega1*x0*sin1);const criticallyDampedEnvelope=Math.exp(-omega0*t);const criticallyDampedPosition=toValue-criticallyDampedEnvelope*(x0+(v0+omega0*x0)*t);const criticallyDampedVelocity=criticallyDampedEnvelope*(v0*(t*omega0-1)+t*x0*omega0*omega0);const isOvershooting=function(){if(config.overshootClamping&&config.stiffness!==0){return current<toValue?animation.current>toValue:animation.current<toValue;}else{return false;}};const isVelocity=Math.abs(velocity)<config.restSpeedThreshold;const isDisplacement=config.stiffness===0||Math.abs(toValue-current)<config.restDisplacementThreshold;if(zeta<1){animation.current=underDampedPosition;animation.velocity=underDampedVelocity;}else{animation.current=criticallyDampedPosition;animation.velocity=criticallyDampedVelocity;}if(isOvershooting()||isVelocity&&isDisplacement){if(config.stiffness!==0){animation.velocity=0;animation.current=toValue;}animation.lastTimestamp=0;return true;}return false;}function onStart(animation,value,now,previousAnimation){animation.current=value;if(previousAnimation){animation.velocity=previousAnimation.velocity||animation.velocity||0;animation.lastTimestamp=previousAnimation.lastTimestamp||now;}else{animation.lastTimestamp=now;}}return{onFrame:spring,onStart:onStart,toValue:toValue,velocity:config.velocity||0,current:toValue,callback:callback,lastTimestamp:0};}}\";\n      _f.__workletHash = 10304282789636;\n      _f.__location = \"/Users/jeko/Documents/Reactive-4twiggers-animation/node_modules/react-native-reanimated/lib/reanimated2/animation/spring.js (4:36)\";\n      return _f;\n    }());\n  };\n  _f._closure = {\n    defineAnimation: defineAnimation\n  };\n  _f.asString = \"function withSpring(toValue,userConfig,callback){const{defineAnimation}=jsThis._closure;{return defineAnimation(toValue,function(){'worklet';const config={damping:10,mass:1,stiffness:100,overshootClamping:false,restDisplacementThreshold:0.01,restSpeedThreshold:2,velocity:0};if(userConfig){Object.keys(userConfig).forEach(function(key){return config[key]=userConfig[key];});}function spring(animation,now){const{toValue:toValue,lastTimestamp:lastTimestamp,current:current,velocity:velocity}=animation;const deltaTime=Math.min(now-lastTimestamp,64);animation.lastTimestamp=now;const c=config.damping;const m=config.mass;const k=config.stiffness;const v0=-velocity;const x0=toValue-current;const zeta=c/(2*Math.sqrt(k*m));const omega0=Math.sqrt(k/m);const omega1=omega0*Math.sqrt(1-Math.pow(zeta,2));const t=deltaTime/1000;const sin1=Math.sin(omega1*t);const cos1=Math.cos(omega1*t);const underDampedEnvelope=Math.exp(-zeta*omega0*t);const underDampedFrag1=underDampedEnvelope*(sin1*((v0+zeta*omega0*x0)/omega1)+x0*cos1);const underDampedPosition=toValue-underDampedFrag1;const underDampedVelocity=zeta*omega0*underDampedFrag1-underDampedEnvelope*(cos1*(v0+zeta*omega0*x0)-omega1*x0*sin1);const criticallyDampedEnvelope=Math.exp(-omega0*t);const criticallyDampedPosition=toValue-criticallyDampedEnvelope*(x0+(v0+omega0*x0)*t);const criticallyDampedVelocity=criticallyDampedEnvelope*(v0*(t*omega0-1)+t*x0*omega0*omega0);const isOvershooting=function(){if(config.overshootClamping&&config.stiffness!==0){return current<toValue?animation.current>toValue:animation.current<toValue;}else{return false;}};const isVelocity=Math.abs(velocity)<config.restSpeedThreshold;const isDisplacement=config.stiffness===0||Math.abs(toValue-current)<config.restDisplacementThreshold;if(zeta<1){animation.current=underDampedPosition;animation.velocity=underDampedVelocity;}else{animation.current=criticallyDampedPosition;animation.velocity=criticallyDampedVelocity;}if(isOvershooting()||isVelocity&&isDisplacement){if(config.stiffness!==0){animation.velocity=0;animation.current=toValue;}animation.lastTimestamp=0;return true;}return false;}function onStart(animation,value,now,previousAnimation){animation.current=value;if(previousAnimation){animation.velocity=previousAnimation.velocity||animation.velocity||0;animation.lastTimestamp=previousAnimation.lastTimestamp||now;}else{animation.lastTimestamp=now;}}return{onFrame:spring,onStart:onStart,toValue:toValue,velocity:config.velocity||0,current:toValue,callback:callback,lastTimestamp:0};});}}\";\n  _f.__workletHash = 12872610892704;\n  _f.__location = \"/Users/jeko/Documents/Reactive-4twiggers-animation/node_modules/react-native-reanimated/lib/reanimated2/animation/spring.js (2:7)\";\n  return _f;\n}();","map":{"version":3,"names":["defineAnimation","withSpring","toValue","userConfig","callback","config","damping","mass","stiffness","overshootClamping","restDisplacementThreshold","restSpeedThreshold","velocity","Object","keys","forEach","key","spring","animation","now","lastTimestamp","current","deltaTime","Math","min","c","m","k","v0","x0","zeta","sqrt","omega0","omega1","pow","t","sin1","sin","cos1","cos","underDampedEnvelope","exp","underDampedFrag1","underDampedPosition","underDampedVelocity","criticallyDampedEnvelope","criticallyDampedPosition","criticallyDampedVelocity","isOvershooting","isVelocity","abs","isDisplacement","onStart","value","previousAnimation","onFrame"],"sources":["/Users/jeko/Documents/Reactive-4twiggers-animation/node_modules/react-native-reanimated/lib/reanimated2/animation/spring.js"],"sourcesContent":["import { defineAnimation } from './util';\nexport function withSpring(toValue, userConfig, callback) {\n    'worklet';\n    return defineAnimation(toValue, () => {\n        'worklet';\n        // TODO: figure out why we can't use spread or Object.assign here\n        // when user config is \"frozen object\" we can't enumerate it (perhaps\n        // something is wrong with the object prototype).\n        const config = {\n            damping: 10,\n            mass: 1,\n            stiffness: 100,\n            overshootClamping: false,\n            restDisplacementThreshold: 0.01,\n            restSpeedThreshold: 2,\n            velocity: 0,\n        };\n        if (userConfig) {\n            Object.keys(userConfig).forEach((key) => (config[key] = userConfig[key]));\n        }\n        function spring(animation, now) {\n            const { toValue, lastTimestamp, current, velocity } = animation;\n            const deltaTime = Math.min(now - lastTimestamp, 64);\n            animation.lastTimestamp = now;\n            const c = config.damping;\n            const m = config.mass;\n            const k = config.stiffness;\n            const v0 = -velocity;\n            const x0 = toValue - current;\n            const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n            const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n            const omega1 = omega0 * Math.sqrt(1 - Math.pow(zeta, 2)); // exponential decay\n            const t = deltaTime / 1000;\n            const sin1 = Math.sin(omega1 * t);\n            const cos1 = Math.cos(omega1 * t);\n            // under damped\n            const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n            const underDampedFrag1 = underDampedEnvelope *\n                (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n            const underDampedPosition = toValue - underDampedFrag1;\n            // This looks crazy -- it's actually just the derivative of the oscillation function\n            const underDampedVelocity = zeta * omega0 * underDampedFrag1 -\n                underDampedEnvelope *\n                    (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n            // critically damped\n            const criticallyDampedEnvelope = Math.exp(-omega0 * t);\n            const criticallyDampedPosition = toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n            const criticallyDampedVelocity = criticallyDampedEnvelope *\n                (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n            const isOvershooting = () => {\n                if (config.overshootClamping && config.stiffness !== 0) {\n                    return current < toValue\n                        ? animation.current > toValue\n                        : animation.current < toValue;\n                }\n                else {\n                    return false;\n                }\n            };\n            const isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n            const isDisplacement = config.stiffness === 0 ||\n                Math.abs(toValue - current) < config.restDisplacementThreshold;\n            if (zeta < 1) {\n                animation.current = underDampedPosition;\n                animation.velocity = underDampedVelocity;\n            }\n            else {\n                animation.current = criticallyDampedPosition;\n                animation.velocity = criticallyDampedVelocity;\n            }\n            if (isOvershooting() || (isVelocity && isDisplacement)) {\n                if (config.stiffness !== 0) {\n                    animation.velocity = 0;\n                    animation.current = toValue;\n                }\n                // clear lastTimestamp to avoid using stale value by the next spring animation that starts after this one\n                animation.lastTimestamp = 0;\n                return true;\n            }\n            return false;\n        }\n        function onStart(animation, value, now, previousAnimation) {\n            animation.current = value;\n            if (previousAnimation) {\n                animation.velocity =\n                    previousAnimation.velocity || animation.velocity || 0;\n                animation.lastTimestamp = previousAnimation.lastTimestamp || now;\n            }\n            else {\n                animation.lastTimestamp = now;\n            }\n        }\n        return {\n            onFrame: spring,\n            onStart,\n            toValue,\n            velocity: config.velocity || 0,\n            current: toValue,\n            callback,\n            lastTimestamp: 0,\n        };\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}