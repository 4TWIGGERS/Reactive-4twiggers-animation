{"ast":null,"code":"import _construct from \"@babel/runtime/helpers/construct\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport AnimatedNode from \"./AnimatedNode\";\nimport { createAnimatedCallFunc } from \"./AnimatedCallFunc\";\nimport { createAnimatedParam } from \"./AnimatedParam\";\nimport { val } from \"../val\";\nimport invariant from 'invariant';\nvar AnimatedFunction = function (_AnimatedNode) {\n  _inherits(AnimatedFunction, _AnimatedNode);\n  var _super = _createSuper(AnimatedFunction);\n  function AnimatedFunction(what) {\n    var _this;\n    _classCallCheck(this, AnimatedFunction);\n    invariant(what instanceof AnimatedNode, \"Reanimated: AnimatedCallFunc 'what' argument should be of type AnimatedNode but got \" + what);\n    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      params[_key - 1] = arguments[_key];\n    }\n    _this = _super.call(this, {\n      type: 'func',\n      what: what\n    }, [what].concat(params));\n    _this._what = what;\n    _this.__attach();\n    return _this;\n  }\n  _createClass(AnimatedFunction, [{\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      return val(this._what);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedFunction, id: \" + this.__nodeID;\n    }\n  }]);\n  return AnimatedFunction;\n}(AnimatedNode);\nexport function createAnimatedFunction(cb) {\n  var params = new Array(cb.length);\n  for (var i = 0; i < params.length; i++) {\n    params[i] = createAnimatedParam();\n  }\n  var what = cb.apply(void 0, params);\n  var func = _construct(AnimatedFunction, [what].concat(params));\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    if (args.length !== params.length) {\n      throw new Error('Parameter mismatch when calling reanimated function. Expected ' + params.length + ' parameters, got ' + args.length + '.');\n    }\n    return createAnimatedCallFunc(func, args, params);\n  };\n}","map":{"version":3,"names":["AnimatedNode","createAnimatedCallFunc","createAnimatedParam","val","invariant","AnimatedFunction","what","params","type","_what","__attach","__nodeID","createAnimatedFunction","cb","Array","length","i","func","args","Error"],"sources":["/Users/jeko/Documents/Reactive-4twiggers-animation/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedFunction.js"],"sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport { createAnimatedCallFunc } from './AnimatedCallFunc';\nimport { createAnimatedParam } from './AnimatedParam';\nimport { val } from '../val';\nimport invariant from 'invariant';\n\nclass AnimatedFunction extends AnimatedNode {\n  _what;\n\n  constructor(what, ...params) {\n    invariant(\n      what instanceof AnimatedNode,\n      `Reanimated: AnimatedCallFunc 'what' argument should be of type AnimatedNode but got ${what}`\n    );\n    super(\n      {\n        type: 'func',\n        what,\n      },\n      [what, ...params]\n    );\n    this._what = what;\n    this.__attach();\n  }\n\n  __onEvaluate() {\n    return val(this._what);\n  }\n\n  toString() {\n    return `AnimatedFunction, id: ${this.__nodeID}`;\n  }\n}\n\nexport function createAnimatedFunction(cb) {\n  const params = new Array(cb.length);\n  for (let i = 0; i < params.length; i++) {\n    params[i] = createAnimatedParam();\n  }\n  // eslint-disable-next-line node/no-callback-literal\n  const what = cb(...params);\n  const func = new AnimatedFunction(what, ...params);\n  return (...args) => {\n    if (args.length !== params.length) {\n      throw new Error(\n        'Parameter mismatch when calling reanimated function. Expected ' +\n          params.length +\n          ' parameters, got ' +\n          args.length +\n          '.'\n      );\n    }\n    return createAnimatedCallFunc(func, args, params);\n  };\n}\n"],"mappings":";;;;;;;;AAAA,OAAOA,YAAY;AACnB,SAASC,sBAAsB;AAC/B,SAASC,mBAAmB;AAC5B,SAASC,GAAG;AACZ,OAAOC,SAAS,MAAM,WAAW;AAAC,IAE5BC,gBAAgB;EAAA;EAAA;EAGpB,0BAAYC,IAAI,EAAa;IAAA;IAAA;IAC3BF,SAAS,CACPE,IAAI,YAAYN,YAAY,2FAC2DM,IAAI,CAC5F;IAAC,kCAJiBC,MAAM;MAANA,MAAM;IAAA;IAKzB,0BACE;MACEC,IAAI,EAAE,MAAM;MACZF,IAAI,EAAJA;IACF,CAAC,GACAA,IAAI,SAAKC,MAAM;IAElB,MAAKE,KAAK,GAAGH,IAAI;IACjB,MAAKI,QAAQ,EAAE;IAAC;EAClB;EAAC;IAAA;IAAA,OAED,wBAAe;MACb,OAAOP,GAAG,CAAC,IAAI,CAACM,KAAK,CAAC;IACxB;EAAC;IAAA;IAAA,OAED,oBAAW;MACT,kCAAgC,IAAI,CAACE,QAAQ;IAC/C;EAAC;EAAA;AAAA,EAzB4BX,YAAY;AA4B3C,OAAO,SAASY,sBAAsB,CAACC,EAAE,EAAE;EACzC,IAAMN,MAAM,GAAG,IAAIO,KAAK,CAACD,EAAE,CAACE,MAAM,CAAC;EACnC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,MAAM,CAACQ,MAAM,EAAEC,CAAC,EAAE,EAAE;IACtCT,MAAM,CAACS,CAAC,CAAC,GAAGd,mBAAmB,EAAE;EACnC;EAEA,IAAMI,IAAI,GAAGO,EAAE,eAAIN,MAAM,CAAC;EAC1B,IAAMU,IAAI,cAAOZ,gBAAgB,GAACC,IAAI,SAAKC,MAAM,EAAC;EAClD,OAAO,YAAa;IAAA,mCAATW,IAAI;MAAJA,IAAI;IAAA;IACb,IAAIA,IAAI,CAACH,MAAM,KAAKR,MAAM,CAACQ,MAAM,EAAE;MACjC,MAAM,IAAII,KAAK,CACb,gEAAgE,GAC9DZ,MAAM,CAACQ,MAAM,GACb,mBAAmB,GACnBG,IAAI,CAACH,MAAM,GACX,GAAG,CACN;IACH;IACA,OAAOd,sBAAsB,CAACgB,IAAI,EAAEC,IAAI,EAAEX,MAAM,CAAC;EACnD,CAAC;AACH"},"metadata":{},"sourceType":"module"}