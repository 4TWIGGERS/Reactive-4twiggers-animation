{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"colors\", \"locations\", \"startPoint\", \"endPoint\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { normalizeColor } from \"./normalizeColor\";\nexport default function NativeLinearGradient(_ref) {\n  var colors = _ref.colors,\n    locations = _ref.locations,\n    startPoint = _ref.startPoint,\n    endPoint = _ref.endPoint,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    layout = _React$useState2[0],\n    setLayout = _React$useState2[1];\n  var _ref2 = layout != null ? layout : {},\n    _ref2$width = _ref2.width,\n    width = _ref2$width === void 0 ? 1 : _ref2$width,\n    _ref2$height = _ref2.height,\n    height = _ref2$height === void 0 ? 1 : _ref2$height;\n  var pseudoAngle = React.useMemo(function () {\n    var getControlPoints = function getControlPoints() {\n      var correctedStartPoint = [0, 0];\n      if (Array.isArray(startPoint)) {\n        correctedStartPoint = [startPoint[0] != null ? startPoint[0] : 0.0, startPoint[1] != null ? startPoint[1] : 0.0];\n      }\n      var correctedEndPoint = [0.0, 1.0];\n      if (Array.isArray(endPoint)) {\n        correctedEndPoint = [endPoint[0] != null ? endPoint[0] : 0.0, endPoint[1] != null ? endPoint[1] : 1.0];\n      }\n      return [correctedStartPoint, correctedEndPoint];\n    };\n    var _getControlPoints = getControlPoints(),\n      _getControlPoints2 = _slicedToArray(_getControlPoints, 2),\n      start = _getControlPoints2[0],\n      end = _getControlPoints2[1];\n    start[0] *= width;\n    end[0] *= width;\n    start[1] *= height;\n    end[1] *= height;\n    var py = end[1] - start[1];\n    var px = end[0] - start[0];\n    return 90 + Math.atan2(py, px) * 180 / Math.PI;\n  }, [width, height, startPoint, endPoint]);\n  var gradientColors = React.useMemo(function () {\n    return colors.map(function (color, index) {\n      var hexColor = normalizeColor(color);\n      var output = hexColor;\n      if (locations && locations[index]) {\n        var location = Math.max(0, Math.min(1, locations[index]));\n        var percentage = location * 100;\n        output += \" \" + percentage + \"%\";\n      }\n      return output;\n    });\n  }, [colors, locations]);\n  var colorStyle = gradientColors.join(',');\n  var backgroundImage = \"linear-gradient(\" + pseudoAngle + \"deg, \" + colorStyle + \")\";\n  return React.createElement(View, _objectSpread(_objectSpread({}, props), {}, {\n    style: [props.style, {\n      backgroundImage: backgroundImage\n    }],\n    onLayout: function onLayout(event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n        x = _event$nativeEvent$la.x,\n        y = _event$nativeEvent$la.y,\n        width = _event$nativeEvent$la.width,\n        height = _event$nativeEvent$la.height;\n      var oldLayout = layout != null ? layout : {\n        x: 0,\n        y: 0,\n        width: 1,\n        height: 1\n      };\n      if (x !== oldLayout.x || y !== oldLayout.y || width !== oldLayout.width || height !== oldLayout.height) {\n        setLayout({\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        });\n      }\n      if (props.onLayout) {\n        props.onLayout(event);\n      }\n    }\n  }));\n}","map":{"version":3,"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAI/B,SAASC,cAAc;AAEvB,eAAc,SAAUC,oBAAoB,OAMhB;EAAA,IAL1BC,MAAM,QAANA,MAAM;IACNC,SAAS,QAATA,SAAS;IACTC,UAAU,QAAVA,UAAU;IACVC,QAAQ,QAARA,QAAQ;IACLC,KAAK;EAER,sBAA4BP,KAAK,CAACQ,QAAQ,CAAyB,IAAI,CAAC;IAAA;IAAjEC,MAAM;IAAEC,SAAS;EAExB,YAAkCD,MAAM,WAANA,MAAM,GAAI,EAAE;IAAA,oBAAtCE,KAAK;IAALA,KAAK,4BAAG,CAAC;IAAA,qBAAEC,MAAM;IAANA,MAAM,6BAAG,CAAC;EAE7B,IAAMC,WAAW,GAAGb,KAAK,CAACc,OAAO,CAAC,YAAK;IACrC,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAqC;MACzD,IAAIC,mBAAmB,GAA8B,CAAC,CAAC,EAAE,CAAC,CAAC;MAC3D,IAAIC,KAAK,CAACC,OAAO,CAACb,UAAU,CAAC,EAAE;QAC7BW,mBAAmB,GAAG,CACpBX,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,GAAGA,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,EAC3CA,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,GAAGA,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAC5C;;MAEH,IAAIc,iBAAiB,GAA8B,CAAC,GAAG,EAAE,GAAG,CAAC;MAC7D,IAAIF,KAAK,CAACC,OAAO,CAACZ,QAAQ,CAAC,EAAE;QAC3Ba,iBAAiB,GAAG,CAClBb,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,GAAGA,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,EACvCA,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,GAAGA,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CACxC;;MAEH,OAAO,CAACU,mBAAmB,EAAEG,iBAAiB,CAAC;IACjD,CAAC;IAED,wBAAqBJ,gBAAgB,EAAE;MAAA;MAAhCK,KAAK;MAAEC,GAAG;IACjBD,KAAK,CAAC,CAAC,CAAC,IAAIT,KAAK;IACjBU,GAAG,CAAC,CAAC,CAAC,IAAIV,KAAK;IACfS,KAAK,CAAC,CAAC,CAAC,IAAIR,MAAM;IAClBS,GAAG,CAAC,CAAC,CAAC,IAAIT,MAAM;IAChB,IAAMU,EAAE,GAAGD,GAAG,CAAC,CAAC,CAAC,GAAGD,KAAK,CAAC,CAAC,CAAC;IAC5B,IAAMG,EAAE,GAAGF,GAAG,CAAC,CAAC,CAAC,GAAGD,KAAK,CAAC,CAAC,CAAC;IAE5B,OAAO,EAAE,GAAII,IAAI,CAACC,KAAK,CAACH,EAAE,EAAEC,EAAE,CAAC,GAAG,GAAG,GAAIC,IAAI,CAACE,EAAE;EAClD,CAAC,EAAE,CAACf,KAAK,EAAEC,MAAM,EAAEP,UAAU,EAAEC,QAAQ,CAAC,CAAC;EAEzC,IAAMqB,cAAc,GAAG3B,KAAK,CAACc,OAAO,CAAC,YAAK;IACxC,OAAOX,MAAM,CAACyB,GAAG,CAAC,UAACC,KAAa,EAAEC,KAAa,EAAmB;MAChE,IAAMC,QAAQ,GAAG9B,cAAc,CAAC4B,KAAK,CAAC;MACtC,IAAIG,MAAM,GAAGD,QAAQ;MACrB,IAAI3B,SAAS,IAAIA,SAAS,CAAC0B,KAAK,CAAC,EAAE;QACjC,IAAMG,QAAQ,GAAGT,IAAI,CAACU,GAAG,CAAC,CAAC,EAAEV,IAAI,CAACW,GAAG,CAAC,CAAC,EAAE/B,SAAS,CAAC0B,KAAK,CAAC,CAAC,CAAC;QAE3D,IAAMM,UAAU,GAAGH,QAAQ,GAAG,GAAG;QACjCD,MAAM,UAAQI,UAAU,MAAG;;MAE7B,OAAOJ,MAAM;IACf,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC7B,MAAM,EAAEC,SAAS,CAAC,CAAC;EAEvB,IAAMiC,UAAU,GAAGV,cAAc,CAACW,IAAI,CAAC,GAAG,CAAC;EAC3C,IAAMC,eAAe,wBAAsB1B,WAAW,aAAQwB,UAAU,MAAG;EAG3E,OACErC,oBAACwC,IAAI,kCACCjC,KAAK;IACTkC,KAAK,EAAE,CACLlC,KAAK,CAACkC,KAAK,EAEX;MAAEF,eAAe,EAAfA;IAAe,CAAE,CACpB;IACDG,QAAQ,EAAE,kBAACC,KAAK,EAAI;MAClB,4BAAgCA,KAAK,CAACC,WAAW,CAACnC,MAAM;QAAhDoC,CAAC,yBAADA,CAAC;QAAEC,CAAC,yBAADA,CAAC;QAAEnC,KAAK,yBAALA,KAAK;QAAEC,MAAM,yBAANA,MAAM;MAC3B,IAAMmC,SAAS,GAAGtC,MAAM,WAANA,MAAM,GAAI;QAAEoC,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEnC,KAAK,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAC,CAAE;MAE/D,IACEiC,CAAC,KAAKE,SAAS,CAACF,CAAC,IACjBC,CAAC,KAAKC,SAAS,CAACD,CAAC,IACjBnC,KAAK,KAAKoC,SAAS,CAACpC,KAAK,IACzBC,MAAM,KAAKmC,SAAS,CAACnC,MAAM,EAC3B;QACAF,SAAS,CAAC;UAAEmC,CAAC,EAADA,CAAC;UAAEC,CAAC,EAADA,CAAC;UAAEnC,KAAK,EAALA,KAAK;UAAEC,MAAM,EAANA;QAAM,CAAE,CAAC;;MAGpC,IAAIL,KAAK,CAACmC,QAAQ,EAAE;QAClBnC,KAAK,CAACmC,QAAQ,CAACC,KAAK,CAAC;;IAEzB;EAAC,GACD;AAEN","names":["React","normalizeColor","NativeLinearGradient","colors","locations","startPoint","endPoint","props","useState","layout","setLayout","width","height","pseudoAngle","useMemo","getControlPoints","correctedStartPoint","Array","isArray","correctedEndPoint","start","end","py","px","Math","atan2","PI","gradientColors","map","color","index","hexColor","output","location","max","min","percentage","colorStyle","join","backgroundImage","View","style","onLayout","event","nativeEvent","x","y","oldLayout"],"sourceRoot":"","sources":["../src/NativeLinearGradient.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport { LayoutRectangle, View } from 'react-native';\n\nimport { NativeLinearGradientPoint, NativeLinearGradientProps } from './NativeLinearGradient.types';\nimport { normalizeColor } from './normalizeColor';\n\nexport default function NativeLinearGradient({\n  colors,\n  locations,\n  startPoint,\n  endPoint,\n  ...props\n}: NativeLinearGradientProps): React.ReactElement {\n  const [layout, setLayout] = React.useState<LayoutRectangle | null>(null);\n\n  const { width = 1, height = 1 } = layout ?? {};\n\n  const pseudoAngle = React.useMemo(() => {\n    const getControlPoints = (): NativeLinearGradientPoint[] => {\n      let correctedStartPoint: NativeLinearGradientPoint = [0, 0];\n      if (Array.isArray(startPoint)) {\n        correctedStartPoint = [\n          startPoint[0] != null ? startPoint[0] : 0.0,\n          startPoint[1] != null ? startPoint[1] : 0.0,\n        ];\n      }\n      let correctedEndPoint: NativeLinearGradientPoint = [0.0, 1.0];\n      if (Array.isArray(endPoint)) {\n        correctedEndPoint = [\n          endPoint[0] != null ? endPoint[0] : 0.0,\n          endPoint[1] != null ? endPoint[1] : 1.0,\n        ];\n      }\n      return [correctedStartPoint, correctedEndPoint];\n    };\n\n    const [start, end] = getControlPoints();\n    start[0] *= width;\n    end[0] *= width;\n    start[1] *= height;\n    end[1] *= height;\n    const py = end[1] - start[1];\n    const px = end[0] - start[0];\n\n    return 90 + (Math.atan2(py, px) * 180) / Math.PI;\n  }, [width, height, startPoint, endPoint]);\n\n  const gradientColors = React.useMemo(() => {\n    return colors.map((color: number, index: number): string | void => {\n      const hexColor = normalizeColor(color);\n      let output = hexColor;\n      if (locations && locations[index]) {\n        const location = Math.max(0, Math.min(1, locations[index]));\n        // Convert 0...1 to 0...100\n        const percentage = location * 100;\n        output += ` ${percentage}%`;\n      }\n      return output;\n    });\n  }, [colors, locations]);\n\n  const colorStyle = gradientColors.join(',');\n  const backgroundImage = `linear-gradient(${pseudoAngle}deg, ${colorStyle})`;\n  // TODO(Bacon): In the future we could consider adding `backgroundRepeat: \"no-repeat\"`. For more\n  // browser support.\n  return (\n    <View\n      {...props}\n      style={[\n        props.style,\n        // @ts-ignore: [ts] Property 'backgroundImage' does not exist on type 'ViewStyle'.\n        { backgroundImage },\n      ]}\n      onLayout={(event) => {\n        const { x, y, width, height } = event.nativeEvent.layout;\n        const oldLayout = layout ?? { x: 0, y: 0, width: 1, height: 1 };\n        // don't set new layout state unless the layout has actually changed\n        if (\n          x !== oldLayout.x ||\n          y !== oldLayout.y ||\n          width !== oldLayout.width ||\n          height !== oldLayout.height\n        ) {\n          setLayout({ x, y, width, height });\n        }\n\n        if (props.onLayout) {\n          props.onLayout(event);\n        }\n      }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}