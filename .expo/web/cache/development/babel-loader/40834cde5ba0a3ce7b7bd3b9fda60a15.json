{"ast":null,"code":"import { always, block, call, clockRunning, cond, set, startClock, stopClock } from \"../base\";\nimport Clock from \"../core/AnimatedClock\";\nimport { evaluateOnce } from \"../derived/evaluateOnce\";\nfunction createOldAnimationObject(node, animationStateDefaults, value, config) {\n  var newClock = new Clock();\n  var currentState = animationStateDefaults();\n  var alwaysNode;\n  var isStarted = false;\n  var isDone = false;\n  var wasStopped = false;\n  var animationCallback;\n  var animation = {\n    start: function start(currentAnimationCallback) {\n      animationCallback = currentAnimationCallback;\n      if (isStarted) {\n        animationCallback && animationCallback({\n          finished: false\n        });\n        return;\n      }\n      if (isDone) {\n        console.warn('Animation has been finished before');\n        return;\n      }\n      if (!value.isNativelyInitialized()) {\n        return;\n      }\n      isStarted = true;\n      evaluateOnce(set(currentState.position, value), currentState.position, function () {\n        alwaysNode = always(set(value, block([cond(clockRunning(newClock), 0, startClock(newClock)), node(newClock, currentState, config), cond(currentState.finished, [call([], function () {\n          isStarted = false;\n          if (!wasStopped) {\n            isDone = true;\n          }\n          value.__detachAnimation(animation);\n          isDone = true;\n          if (!wasStopped) {\n            wasStopped = false;\n          }\n        }), stopClock(newClock)]), currentState.position])));\n        value.__attachAnimation(animation);\n        alwaysNode.__addChild(value);\n      });\n    },\n    __detach: function __detach() {\n      animationCallback && animationCallback({\n        finished: isDone\n      });\n      animationCallback = null;\n      value.__initialized && alwaysNode.__removeChild(value);\n    },\n    stop: function stop() {\n      if (isDone) {\n        console.warn('Calling stop has no effect as the animation has already completed');\n        return;\n      }\n      if (!isStarted) {\n        console.warn(\"Calling stop has no effect as the animation hasn't been started\");\n        return;\n      }\n      wasStopped = true;\n      evaluateOnce(set(currentState.finished, 1), currentState.finished);\n    },\n    __stopImmediately_testOnly: function __stopImmediately_testOnly(result) {\n      animation.stop();\n      isDone = result;\n      value.__detachAnimation(animation);\n    }\n  };\n  return animation;\n}\nexport default function backwardsCompatibleAnimWrapper(node, animationStateDefaults) {\n  return function (clock, state, config) {\n    if (config !== undefined) {\n      return node(clock, state, config);\n    }\n    return createOldAnimationObject(node, animationStateDefaults, clock, state);\n  };\n}","map":{"version":3,"names":["always","block","call","clockRunning","cond","set","startClock","stopClock","Clock","evaluateOnce","createOldAnimationObject","node","animationStateDefaults","value","config","newClock","currentState","alwaysNode","isStarted","isDone","wasStopped","animationCallback","animation","start","currentAnimationCallback","finished","console","warn","isNativelyInitialized","position","__detachAnimation","__attachAnimation","__addChild","__detach","__initialized","__removeChild","stop","__stopImmediately_testOnly","result","backwardsCompatibleAnimWrapper","clock","state","undefined"],"sources":["/Users/jeko/Documents/Reactive-4twiggers-animation/node_modules/react-native-reanimated/lib/reanimated1/animations/backwardCompatibleAnimWrapper.js"],"sourcesContent":["import {\n  always,\n  block,\n  call,\n  clockRunning,\n  cond,\n  set,\n  startClock,\n  stopClock,\n} from '../base';\nimport Clock from '../core/AnimatedClock';\nimport { evaluateOnce } from '../derived/evaluateOnce';\n\nfunction createOldAnimationObject(node, animationStateDefaults, value, config) {\n  const newClock = new Clock();\n  const currentState = animationStateDefaults();\n  let alwaysNode;\n  let isStarted = false;\n  let isDone = false;\n  let wasStopped = false;\n  let animationCallback;\n  const animation = {\n    start: (currentAnimationCallback) => {\n      animationCallback = currentAnimationCallback;\n      if (isStarted) {\n        animationCallback && animationCallback({ finished: false });\n        return;\n      }\n      if (isDone) {\n        console.warn('Animation has been finished before');\n        // inconsistent with React Native\n        return;\n      }\n\n      if (!value.isNativelyInitialized()) {\n        return;\n      }\n\n      isStarted = true;\n      evaluateOnce(\n        set(currentState.position, value),\n        currentState.position,\n        () => {\n          alwaysNode = always(\n            set(\n              value,\n              block([\n                cond(clockRunning(newClock), 0, startClock(newClock)),\n                node(newClock, currentState, config),\n                cond(currentState.finished, [\n                  call([], () => {\n                    isStarted = false;\n                    if (!wasStopped) {\n                      isDone = true;\n                    }\n                    value.__detachAnimation(animation);\n                    isDone = true;\n                    if (!wasStopped) {\n                      wasStopped = false;\n                    }\n                  }),\n                  stopClock(newClock),\n                ]),\n                currentState.position,\n              ])\n            )\n          );\n          value.__attachAnimation(animation);\n          alwaysNode.__addChild(value);\n        }\n      );\n    },\n    __detach: () => {\n      animationCallback && animationCallback({ finished: isDone });\n      animationCallback = null;\n      value.__initialized && alwaysNode.__removeChild(value);\n    },\n    stop: () => {\n      if (isDone) {\n        console.warn(\n          'Calling stop has no effect as the animation has already completed'\n        );\n        return;\n      }\n      if (!isStarted) {\n        console.warn(\n          \"Calling stop has no effect as the animation hasn't been started\"\n        );\n        return;\n      }\n      wasStopped = true;\n      evaluateOnce(set(currentState.finished, 1), currentState.finished);\n    },\n    __stopImmediately_testOnly: (result) => {\n      animation.stop();\n      isDone = result;\n      value.__detachAnimation(animation);\n    },\n  };\n  return animation;\n}\n\n/**\n * Depending on the arguments list we either return animation node or return an\n * animation object that is compatible with the original Animated API\n */\nexport default function backwardsCompatibleAnimWrapper(\n  node,\n  animationStateDefaults\n) {\n  return (clock, state, config) => {\n    if (config !== undefined) {\n      return node(clock, state, config);\n    }\n    return createOldAnimationObject(node, animationStateDefaults, clock, state);\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}