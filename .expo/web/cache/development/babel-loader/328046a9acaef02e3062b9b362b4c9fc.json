{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { makeMutable } from \"../core\";\nimport NativeReanimated from \"../NativeReanimated\";\nexport var SensorType;\n(function (SensorType) {\n  SensorType[SensorType[\"ACCELEROMETER\"] = 1] = \"ACCELEROMETER\";\n  SensorType[SensorType[\"GYROSCOPE\"] = 2] = \"GYROSCOPE\";\n  SensorType[SensorType[\"GRAVITY\"] = 3] = \"GRAVITY\";\n  SensorType[SensorType[\"MAGNETIC_FIELD\"] = 4] = \"MAGNETIC_FIELD\";\n  SensorType[SensorType[\"ROTATION\"] = 5] = \"ROTATION\";\n})(SensorType || (SensorType = {}));\nexport function useAnimatedSensor(sensorType, userConfig) {\n  var ref = useRef({\n    sensor: null,\n    unregister: function unregister() {},\n    isAvailable: false,\n    config: {\n      interval: 0\n    }\n  });\n  if (ref.current.sensor === null) {\n    ref.current.config = Object.assign({\n      interval: 10\n    }, userConfig);\n    var sensorData;\n    if (sensorType === SensorType.ROTATION) {\n      sensorData = {\n        qw: 0,\n        qx: 0,\n        qy: 0,\n        qz: 0,\n        yaw: 0,\n        pitch: 0,\n        roll: 0\n      };\n    } else {\n      sensorData = {\n        x: 0,\n        y: 0,\n        z: 0\n      };\n    }\n    ref.current.sensor = makeMutable(sensorData);\n  }\n  useEffect(function () {\n    ref.current.config = Object.assign({\n      interval: 10\n    }, userConfig);\n    var id = NativeReanimated.registerSensor(sensorType, ref.current.config.interval, ref.current.sensor);\n    if (id !== -1) {\n      ref.current.unregister = function () {\n        return NativeReanimated.unregisterSensor(id);\n      };\n      ref.current.isAvailable = true;\n    } else {\n      ref.current.unregister = function () {};\n      ref.current.isAvailable = false;\n    }\n    return function () {\n      ref.current.unregister();\n    };\n  }, [sensorType, userConfig]);\n  return ref.current;\n}","map":{"version":3,"names":["useEffect","useRef","makeMutable","NativeReanimated","SensorType","useAnimatedSensor","sensorType","userConfig","ref","sensor","unregister","isAvailable","config","interval","current","Object","assign","sensorData","ROTATION","qw","qx","qy","qz","yaw","pitch","roll","x","y","z","id","registerSensor","unregisterSensor"],"sources":["/Users/jeko/Documents/Reactive-4twiggers-animation/node_modules/react-native-reanimated/lib/reanimated2/hook/useAnimatedSensor.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { makeMutable } from '../core';\nimport NativeReanimated from '../NativeReanimated';\nexport var SensorType;\n(function (SensorType) {\n    SensorType[SensorType[\"ACCELEROMETER\"] = 1] = \"ACCELEROMETER\";\n    SensorType[SensorType[\"GYROSCOPE\"] = 2] = \"GYROSCOPE\";\n    SensorType[SensorType[\"GRAVITY\"] = 3] = \"GRAVITY\";\n    SensorType[SensorType[\"MAGNETIC_FIELD\"] = 4] = \"MAGNETIC_FIELD\";\n    SensorType[SensorType[\"ROTATION\"] = 5] = \"ROTATION\";\n})(SensorType || (SensorType = {}));\nexport function useAnimatedSensor(sensorType, userConfig) {\n    const ref = useRef({\n        sensor: null,\n        unregister: () => {\n            // NOOP\n        },\n        isAvailable: false,\n        config: {\n            interval: 0,\n        },\n    });\n    if (ref.current.sensor === null) {\n        ref.current.config = Object.assign({ interval: 10 }, userConfig);\n        let sensorData;\n        if (sensorType === SensorType.ROTATION) {\n            sensorData = {\n                qw: 0,\n                qx: 0,\n                qy: 0,\n                qz: 0,\n                yaw: 0,\n                pitch: 0,\n                roll: 0,\n            };\n        }\n        else {\n            sensorData = {\n                x: 0,\n                y: 0,\n                z: 0,\n            };\n        }\n        ref.current.sensor = makeMutable(sensorData);\n    }\n    useEffect(() => {\n        ref.current.config = Object.assign({ interval: 10 }, userConfig);\n        const id = NativeReanimated.registerSensor(sensorType, ref.current.config.interval, ref.current.sensor);\n        if (id !== -1) {\n            // if sensor is available\n            ref.current.unregister = () => NativeReanimated.unregisterSensor(id);\n            ref.current.isAvailable = true;\n        }\n        else {\n            // if sensor is unavailable\n            ref.current.unregister = () => {\n                // NOOP\n            };\n            ref.current.isAvailable = false;\n        }\n        return () => {\n            ref.current.unregister();\n        };\n    }, [sensorType, userConfig]);\n    return ref.current;\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,WAAW;AACpB,OAAOC,gBAAgB;AACvB,OAAO,IAAIC,UAAU;AACrB,CAAC,UAAUA,UAAU,EAAE;EACnBA,UAAU,CAACA,UAAU,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,GAAG,eAAe;EAC7DA,UAAU,CAACA,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW;EACrDA,UAAU,CAACA,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;EACjDA,UAAU,CAACA,UAAU,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,GAAG,gBAAgB;EAC/DA,UAAU,CAACA,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU;AACvD,CAAC,EAAEA,UAAU,KAAKA,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;AACnC,OAAO,SAASC,iBAAiB,CAACC,UAAU,EAAEC,UAAU,EAAE;EACtD,IAAMC,GAAG,GAAGP,MAAM,CAAC;IACfQ,MAAM,EAAE,IAAI;IACZC,UAAU,EAAE,sBAAM,CAElB,CAAC;IACDC,WAAW,EAAE,KAAK;IAClBC,MAAM,EAAE;MACJC,QAAQ,EAAE;IACd;EACJ,CAAC,CAAC;EACF,IAAIL,GAAG,CAACM,OAAO,CAACL,MAAM,KAAK,IAAI,EAAE;IAC7BD,GAAG,CAACM,OAAO,CAACF,MAAM,GAAGG,MAAM,CAACC,MAAM,CAAC;MAAEH,QAAQ,EAAE;IAAG,CAAC,EAAEN,UAAU,CAAC;IAChE,IAAIU,UAAU;IACd,IAAIX,UAAU,KAAKF,UAAU,CAACc,QAAQ,EAAE;MACpCD,UAAU,GAAG;QACTE,EAAE,EAAE,CAAC;QACLC,EAAE,EAAE,CAAC;QACLC,EAAE,EAAE,CAAC;QACLC,EAAE,EAAE,CAAC;QACLC,GAAG,EAAE,CAAC;QACNC,KAAK,EAAE,CAAC;QACRC,IAAI,EAAE;MACV,CAAC;IACL,CAAC,MACI;MACDR,UAAU,GAAG;QACTS,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE;MACP,CAAC;IACL;IACApB,GAAG,CAACM,OAAO,CAACL,MAAM,GAAGP,WAAW,CAACe,UAAU,CAAC;EAChD;EACAjB,SAAS,CAAC,YAAM;IACZQ,GAAG,CAACM,OAAO,CAACF,MAAM,GAAGG,MAAM,CAACC,MAAM,CAAC;MAAEH,QAAQ,EAAE;IAAG,CAAC,EAAEN,UAAU,CAAC;IAChE,IAAMsB,EAAE,GAAG1B,gBAAgB,CAAC2B,cAAc,CAACxB,UAAU,EAAEE,GAAG,CAACM,OAAO,CAACF,MAAM,CAACC,QAAQ,EAAEL,GAAG,CAACM,OAAO,CAACL,MAAM,CAAC;IACvG,IAAIoB,EAAE,KAAK,CAAC,CAAC,EAAE;MAEXrB,GAAG,CAACM,OAAO,CAACJ,UAAU,GAAG;QAAA,OAAMP,gBAAgB,CAAC4B,gBAAgB,CAACF,EAAE,CAAC;MAAA;MACpErB,GAAG,CAACM,OAAO,CAACH,WAAW,GAAG,IAAI;IAClC,CAAC,MACI;MAEDH,GAAG,CAACM,OAAO,CAACJ,UAAU,GAAG,YAAM,CAE/B,CAAC;MACDF,GAAG,CAACM,OAAO,CAACH,WAAW,GAAG,KAAK;IACnC;IACA,OAAO,YAAM;MACTH,GAAG,CAACM,OAAO,CAACJ,UAAU,EAAE;IAC5B,CAAC;EACL,CAAC,EAAE,CAACJ,UAAU,EAAEC,UAAU,CAAC,CAAC;EAC5B,OAAOC,GAAG,CAACM,OAAO;AACtB"},"metadata":{},"sourceType":"module"}