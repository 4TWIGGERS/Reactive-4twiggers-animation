{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport invariant from 'invariant';\nimport { adapt } from \"../core/AnimatedBlock\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport { val } from \"../val\";\nvar AnimatedConcat = function (_AnimatedNode) {\n  _inherits(AnimatedConcat, _AnimatedNode);\n  var _super = _createSuper(AnimatedConcat);\n  function AnimatedConcat(input) {\n    var _this;\n    _classCallCheck(this, AnimatedConcat);\n    invariant(input.every(function (el) {\n      return el instanceof AnimatedNode || typeof el === 'number' || typeof el === 'string';\n    }), \"Reanimated: Animated.concat node arguments should be of type AnimatedNode or String or Number. One or more of them are not of that type. Node: \" + input);\n    _this = _super.call(this, {\n      type: 'concat',\n      input: input\n    }, input);\n    _this._input = input;\n    return _this;\n  }\n  _createClass(AnimatedConcat, [{\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      return this._input.reduce(function (prev, current) {\n        return prev + val(current);\n      }, '');\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedConcat, id: \" + this.__nodeID;\n    }\n  }]);\n  return AnimatedConcat;\n}(AnimatedNode);\nexport function createAnimatedConcat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return new AnimatedConcat(args.map(adapt));\n}","map":{"version":3,"names":["invariant","adapt","AnimatedNode","val","AnimatedConcat","input","every","el","type","_input","reduce","prev","current","__nodeID","createAnimatedConcat","args","map"],"sources":["/Users/jeko/Documents/Reactive-4twiggers-animation/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedConcat.js"],"sourcesContent":["import invariant from 'invariant';\nimport { adapt } from '../core/AnimatedBlock';\nimport AnimatedNode from './AnimatedNode';\nimport { val } from '../val';\n\nclass AnimatedConcat extends AnimatedNode {\n  constructor(input) {\n    invariant(\n      input.every(\n        (el) =>\n          el instanceof AnimatedNode ||\n          typeof el === 'number' ||\n          typeof el === 'string'\n      ),\n      `Reanimated: Animated.concat node arguments should be of type AnimatedNode or String or Number. One or more of them are not of that type. Node: ${input}`\n    );\n    super({ type: 'concat', input }, input);\n    this._input = input;\n  }\n\n  __onEvaluate() {\n    return this._input.reduce((prev, current) => prev + val(current), '');\n  }\n\n  toString() {\n    return `AnimatedConcat, id: ${this.__nodeID}`;\n  }\n}\n\nexport function createAnimatedConcat(...args) {\n  return new AnimatedConcat(args.map(adapt));\n}\n"],"mappings":";;;;;;;AAAA,OAAOA,SAAS,MAAM,WAAW;AACjC,SAASC,KAAK;AACd,OAAOC,YAAY;AACnB,SAASC,GAAG;AAAiB,IAEvBC,cAAc;EAAA;EAAA;EAClB,wBAAYC,KAAK,EAAE;IAAA;IAAA;IACjBL,SAAS,CACPK,KAAK,CAACC,KAAK,CACT,UAACC,EAAE;MAAA,OACDA,EAAE,YAAYL,YAAY,IAC1B,OAAOK,EAAE,KAAK,QAAQ,IACtB,OAAOA,EAAE,KAAK,QAAQ;IAAA,EACzB,sJACiJF,KAAK,CACxJ;IACD,0BAAM;MAAEG,IAAI,EAAE,QAAQ;MAAEH,KAAK,EAALA;IAAM,CAAC,EAAEA,KAAK;IACtC,MAAKI,MAAM,GAAGJ,KAAK;IAAC;EACtB;EAAC;IAAA;IAAA,OAED,wBAAe;MACb,OAAO,IAAI,CAACI,MAAM,CAACC,MAAM,CAAC,UAACC,IAAI,EAAEC,OAAO;QAAA,OAAKD,IAAI,GAAGR,GAAG,CAACS,OAAO,CAAC;MAAA,GAAE,EAAE,CAAC;IACvE;EAAC;IAAA;IAAA,OAED,oBAAW;MACT,gCAA8B,IAAI,CAACC,QAAQ;IAC7C;EAAC;EAAA;AAAA,EArB0BX,YAAY;AAwBzC,OAAO,SAASY,oBAAoB,GAAU;EAAA,kCAANC,IAAI;IAAJA,IAAI;EAAA;EAC1C,OAAO,IAAIX,cAAc,CAACW,IAAI,CAACC,GAAG,CAACf,KAAK,CAAC,CAAC;AAC5C"},"metadata":{},"sourceType":"module"}