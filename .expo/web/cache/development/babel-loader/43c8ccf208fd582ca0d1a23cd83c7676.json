{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"rippleColor\"],\n  _excluded2 = [\"children\", \"style\"],\n  _excluded3 = [\"children\", \"style\"];\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport createNativeWrapper from \"../handlers/createNativeWrapper\";\nimport GestureHandlerButton from \"./GestureHandlerButton\";\nimport { State } from \"../State\";\nexport var RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false\n});\nexport var BaseButton = function (_React$Component) {\n  _inherits(BaseButton, _React$Component);\n  var _super = _createSuper(BaseButton);\n  function BaseButton(props) {\n    var _this;\n    _classCallCheck(this, BaseButton);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"lastActive\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"longPressTimeout\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"longPressDetected\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"handleEvent\", function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      var state = nativeEvent.state,\n        oldState = nativeEvent.oldState,\n        pointerInside = nativeEvent.pointerInside;\n      var active = pointerInside && state === State.ACTIVE;\n      if (active !== _this.lastActive && _this.props.onActiveStateChange) {\n        _this.props.onActiveStateChange(active);\n      }\n      if (!_this.longPressDetected && oldState === State.ACTIVE && state !== State.CANCELLED && _this.lastActive && _this.props.onPress) {\n        _this.props.onPress(active);\n      }\n      if (!_this.lastActive && state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) && pointerInside) {\n        _this.longPressDetected = false;\n        if (_this.props.onLongPress) {\n          _this.longPressTimeout = setTimeout(_this.onLongPress, _this.props.delayLongPress);\n        }\n      } else if (state === State.ACTIVE && !pointerInside && _this.longPressTimeout !== undefined) {\n        clearTimeout(_this.longPressTimeout);\n        _this.longPressTimeout = undefined;\n      } else if (_this.longPressTimeout !== undefined && (state === State.END || state === State.CANCELLED || state === State.FAILED)) {\n        clearTimeout(_this.longPressTimeout);\n        _this.longPressTimeout = undefined;\n      }\n      _this.lastActive = active;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onLongPress\", function () {\n      var _this$props$onLongPre, _this$props;\n      _this.longPressDetected = true;\n      (_this$props$onLongPre = (_this$props = _this.props).onLongPress) === null || _this$props$onLongPre === void 0 ? void 0 : _this$props$onLongPre.call(_this$props);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onHandlerStateChange\", function (e) {\n      var _this$props$onHandler, _this$props2;\n      (_this$props$onHandler = (_this$props2 = _this.props).onHandlerStateChange) === null || _this$props$onHandler === void 0 ? void 0 : _this$props$onHandler.call(_this$props2, e);\n      _this.handleEvent(e);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onGestureEvent\", function (e) {\n      var _this$props$onGesture, _this$props3;\n      (_this$props$onGesture = (_this$props3 = _this.props).onGestureEvent) === null || _this$props$onGesture === void 0 ? void 0 : _this$props$onGesture.call(_this$props3, e);\n      _this.handleEvent(e);\n    });\n    _this.lastActive = false;\n    _this.longPressDetected = false;\n    return _this;\n  }\n  _createClass(BaseButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n        rippleColor = _this$props6.rippleColor,\n        rest = _objectWithoutProperties(_this$props6, _excluded);\n      return React.createElement(RawButton, _extends({\n        rippleColor: processColor(rippleColor)\n      }, rest, {\n        onGestureEvent: this.onGestureEvent,\n        onHandlerStateChange: this.onHandlerStateChange\n      }));\n    }\n  }]);\n  return BaseButton;\n}(React.Component);\n_defineProperty(BaseButton, \"defaultProps\", {\n  delayLongPress: 600\n});\nvar AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\nvar btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0\n  }\n});\nexport var RectButton = function (_React$Component2) {\n  _inherits(RectButton, _React$Component2);\n  var _super2 = _createSuper(RectButton);\n  function RectButton(props) {\n    var _this2;\n    _classCallCheck(this, RectButton);\n    _this2 = _super2.call(this, props);\n    _defineProperty(_assertThisInitialized(_this2), \"opacity\", void 0);\n    _defineProperty(_assertThisInitialized(_this2), \"onActiveStateChange\", function (active) {\n      var _this$props$onActiveS, _this$props4;\n      if (Platform.OS !== 'android') {\n        _this2.opacity.setValue(active ? _this2.props.activeOpacity : 0);\n      }\n      (_this$props$onActiveS = (_this$props4 = _this2.props).onActiveStateChange) === null || _this$props$onActiveS === void 0 ? void 0 : _this$props$onActiveS.call(_this$props4, active);\n    });\n    _this2.opacity = new Animated.Value(0);\n    return _this2;\n  }\n  _createClass(RectButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props7 = this.props,\n        children = _this$props7.children,\n        style = _this$props7.style,\n        rest = _objectWithoutProperties(_this$props7, _excluded2);\n      var resolvedStyle = StyleSheet.flatten(style !== null && style !== void 0 ? style : {});\n      return React.createElement(BaseButton, _extends({}, rest, {\n        style: resolvedStyle,\n        onActiveStateChange: this.onActiveStateChange\n      }), React.createElement(Animated.View, {\n        style: [btnStyles.underlay, {\n          opacity: this.opacity,\n          backgroundColor: this.props.underlayColor,\n          borderRadius: resolvedStyle.borderRadius,\n          borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n          borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n          borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n          borderBottomRightRadius: resolvedStyle.borderBottomRightRadius\n        }]\n      }), children);\n    }\n  }]);\n  return RectButton;\n}(React.Component);\n_defineProperty(RectButton, \"defaultProps\", {\n  activeOpacity: 0.105,\n  underlayColor: 'black'\n});\nexport var BorderlessButton = function (_React$Component3) {\n  _inherits(BorderlessButton, _React$Component3);\n  var _super3 = _createSuper(BorderlessButton);\n  function BorderlessButton(props) {\n    var _this3;\n    _classCallCheck(this, BorderlessButton);\n    _this3 = _super3.call(this, props);\n    _defineProperty(_assertThisInitialized(_this3), \"opacity\", void 0);\n    _defineProperty(_assertThisInitialized(_this3), \"onActiveStateChange\", function (active) {\n      var _this$props$onActiveS2, _this$props5;\n      if (Platform.OS !== 'android') {\n        _this3.opacity.setValue(active ? _this3.props.activeOpacity : 1);\n      }\n      (_this$props$onActiveS2 = (_this$props5 = _this3.props).onActiveStateChange) === null || _this$props$onActiveS2 === void 0 ? void 0 : _this$props$onActiveS2.call(_this$props5, active);\n    });\n    _this3.opacity = new Animated.Value(1);\n    return _this3;\n  }\n  _createClass(BorderlessButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n        children = _this$props8.children,\n        style = _this$props8.style,\n        rest = _objectWithoutProperties(_this$props8, _excluded3);\n      return React.createElement(AnimatedBaseButton, _extends({}, rest, {\n        onActiveStateChange: this.onActiveStateChange,\n        style: [style, Platform.OS === 'ios' && {\n          opacity: this.opacity\n        }]\n      }), children);\n    }\n  }]);\n  return BorderlessButton;\n}(React.Component);\n_defineProperty(BorderlessButton, \"defaultProps\", {\n  activeOpacity: 0.3,\n  borderless: true\n});\nexport { default as PureNativeButton } from \"./GestureHandlerButton\";","map":{"version":3,"sources":["GestureButtons.tsx"],"names":["React","createNativeWrapper","GestureHandlerButton","State","RawButton","shouldCancelWhenOutside","shouldActivateOnStart","BaseButton","Component","delayLongPress","constructor","props","lastActive","longPressDetected","nativeEvent","state","oldState","pointerInside","active","ACTIVE","onActiveStateChange","CANCELLED","onPress","Platform","OS","BEGAN","onLongPress","longPressTimeout","setTimeout","undefined","clearTimeout","END","FAILED","e","onHandlerStateChange","handleEvent","onGestureEvent","render","rippleColor","rest","processColor","AnimatedBaseButton","Animated","createAnimatedComponent","btnStyles","create","underlay","position","left","right","bottom","top","RectButton","activeOpacity","underlayColor","opacity","Value","setValue","children","style","resolvedStyle","StyleSheet","flatten","backgroundColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","BorderlessButton","borderless","default","PureNativeButton"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  processColor,\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\nimport GestureHandlerButton from './GestureHandlerButton';\nimport { State } from '../State';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../handlers/gestureHandlerCommon';\nimport {\n  NativeViewGestureHandlerPayload,\n  NativeViewGestureHandlerProps,\n} from '../handlers/NativeViewGestureHandler';\n\nexport interface RawButtonProps extends NativeViewGestureHandlerProps {\n  /**\n   * Defines if more than one button could be pressed simultaneously. By default\n   * set true.\n   */\n  exclusive?: boolean;\n  // TODO: we should transform props in `createNativeWrapper`\n\n  /**\n   * Android only.\n   *\n   * Defines color of native ripple animation used since API level 21.\n   */\n  rippleColor?: any; // it was present in BaseButtonProps before but is used here in code\n\n  /**\n   * Android only.\n   *\n   * Defines radius of native ripple animation used since API level 21.\n   */\n  rippleRadius?: number | null;\n\n  /**\n   * Android only.\n   *\n   * Set this to true if you want the ripple animation to render outside the view bounds.\n   */\n  borderless?: boolean;\n\n  /**\n   * Android only.\n   *\n   * Defines whether the ripple animation should be drawn on the foreground of the view.\n   */\n  foreground?: boolean;\n\n  /**\n   * Android only.\n   *\n   * Set this to true if you don't want the system to play sound when the button is pressed.\n   */\n  touchSoundDisabled?: boolean;\n}\n\nexport interface BaseButtonProps extends RawButtonProps {\n  /**\n   * Called when the button gets pressed (analogous to `onPress` in\n   * `TouchableHighlight` from RN core).\n   */\n  onPress?: (pointerInside: boolean) => void;\n\n  /**\n   * Called when the button gets pressed and is held for `delayLongPress`\n   * milliseconds.\n   */\n  onLongPress?: () => void;\n\n  /**\n   * Called when button changes from inactive to active and vice versa. It\n   * passes active state as a boolean variable as a first parameter for that\n   * method.\n   */\n  onActiveStateChange?: (active: boolean) => void;\n  style?: StyleProp<ViewStyle>;\n  testID?: string;\n\n  /**\n   * Delay, in milliseconds, after which the `onLongPress` callback gets called.\n   * Defaults to 600.\n   */\n  delayLongPress?: number;\n}\n\nexport interface RectButtonProps extends BaseButtonProps {\n  /**\n   * Background color that will be dimmed when button is in active state.\n   */\n  underlayColor?: string;\n\n  /**\n   * iOS only.\n   *\n   * Opacity applied to the underlay when button is in active state.\n   */\n  activeOpacity?: number;\n}\n\nexport interface BorderlessButtonProps extends BaseButtonProps {\n  /**\n   * iOS only.\n   *\n   * Opacity applied to the button when it is in an active state.\n   */\n  activeOpacity?: number;\n}\n\nexport const RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false,\n});\n\nexport class BaseButton extends React.Component<BaseButtonProps> {\n  static defaultProps = {\n    delayLongPress: 600,\n  };\n\n  private lastActive: boolean;\n  private longPressTimeout: ReturnType<typeof setTimeout> | undefined;\n  private longPressDetected: boolean;\n\n  constructor(props: BaseButtonProps) {\n    super(props);\n    this.lastActive = false;\n    this.longPressDetected = false;\n  }\n\n  private handleEvent = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>) => {\n    const { state, oldState, pointerInside } = nativeEvent;\n    const active = pointerInside && state === State.ACTIVE;\n\n    if (active !== this.lastActive && this.props.onActiveStateChange) {\n      this.props.onActiveStateChange(active);\n    }\n\n    if (\n      !this.longPressDetected &&\n      oldState === State.ACTIVE &&\n      state !== State.CANCELLED &&\n      this.lastActive &&\n      this.props.onPress\n    ) {\n      this.props.onPress(active);\n    }\n\n    if (\n      !this.lastActive &&\n      // NativeViewGestureHandler sends different events based on platform\n      state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\n      pointerInside\n    ) {\n      this.longPressDetected = false;\n      if (this.props.onLongPress) {\n        this.longPressTimeout = setTimeout(\n          this.onLongPress,\n          this.props.delayLongPress\n        );\n      }\n    } else if (\n      // cancel longpress timeout if it's set and the finger moved out of the view\n      state === State.ACTIVE &&\n      !pointerInside &&\n      this.longPressTimeout !== undefined\n    ) {\n      clearTimeout(this.longPressTimeout);\n      this.longPressTimeout = undefined;\n    } else if (\n      // cancel longpress timeout if it's set and the gesture has finished\n      this.longPressTimeout !== undefined &&\n      (state === State.END ||\n        state === State.CANCELLED ||\n        state === State.FAILED)\n    ) {\n      clearTimeout(this.longPressTimeout);\n      this.longPressTimeout = undefined;\n    }\n\n    this.lastActive = active;\n  };\n\n  private onLongPress = () => {\n    this.longPressDetected = true;\n    this.props.onLongPress?.();\n  };\n\n  // Normally, the parent would execute it's handler first, then forward the\n  // event to listeners. However, here our handler is virtually only forwarding\n  // events to listeners, so we reverse the order to keep the proper order of\n  // the callbacks (from \"raw\" ones to \"processed\").\n  private onHandlerStateChange = (\n    e: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>\n  ) => {\n    this.props.onHandlerStateChange?.(e);\n    this.handleEvent(e);\n  };\n\n  private onGestureEvent = (\n    e: GestureEvent<NativeViewGestureHandlerPayload>\n  ) => {\n    this.props.onGestureEvent?.(e);\n    this.handleEvent(\n      e as HandlerStateChangeEvent<NativeViewGestureHandlerPayload>\n    ); // TODO: maybe it is not correct\n  };\n\n  render() {\n    const { rippleColor, ...rest } = this.props;\n\n    return (\n      <RawButton\n        rippleColor={processColor(rippleColor)}\n        {...rest}\n        onGestureEvent={this.onGestureEvent}\n        onHandlerStateChange={this.onHandlerStateChange}\n      />\n    );\n  }\n}\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nconst btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  },\n});\n\nexport class RectButton extends React.Component<RectButtonProps> {\n  static defaultProps = {\n    activeOpacity: 0.105,\n    underlayColor: 'black',\n  };\n\n  private opacity: Animated.Value;\n\n  constructor(props: RectButtonProps) {\n    super(props);\n    this.opacity = new Animated.Value(0);\n  }\n\n  private onActiveStateChange = (active: boolean) => {\n    if (Platform.OS !== 'android') {\n      this.opacity.setValue(active ? this.props.activeOpacity! : 0);\n    }\n\n    this.props.onActiveStateChange?.(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    const resolvedStyle = StyleSheet.flatten(style ?? {});\n\n    return (\n      <BaseButton\n        {...rest}\n        style={resolvedStyle}\n        onActiveStateChange={this.onActiveStateChange}>\n        <Animated.View\n          style={[\n            btnStyles.underlay,\n            {\n              opacity: this.opacity,\n              backgroundColor: this.props.underlayColor,\n              borderRadius: resolvedStyle.borderRadius,\n              borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n              borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n              borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n              borderBottomRightRadius: resolvedStyle.borderBottomRightRadius,\n            },\n          ]}\n        />\n        {children}\n      </BaseButton>\n    );\n  }\n}\n\nexport class BorderlessButton extends React.Component<BorderlessButtonProps> {\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n  };\n\n  private opacity: Animated.Value;\n\n  constructor(props: BorderlessButtonProps) {\n    super(props);\n    this.opacity = new Animated.Value(1);\n  }\n\n  private onActiveStateChange = (active: boolean) => {\n    if (Platform.OS !== 'android') {\n      this.opacity.setValue(active ? this.props.activeOpacity! : 1);\n    }\n\n    this.props.onActiveStateChange?.(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        onActiveStateChange={this.onActiveStateChange}\n        style={[style, Platform.OS === 'ios' && { opacity: this.opacity }]}>\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n\nexport { default as PureNativeButton } from './GestureHandlerButton';\n"]},"metadata":{},"sourceType":"module"}