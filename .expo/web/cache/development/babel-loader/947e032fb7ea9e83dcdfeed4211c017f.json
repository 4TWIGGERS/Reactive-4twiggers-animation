{"ast":null,"code":"export var isnan = function isnan(v) {\n  return Number.isNaN(v);\n};\nexport var isValidNumber = function isValidNumber(v) {\n  return typeof v === 'number' && !Number.isNaN(v);\n};\nexport var TEST_MIN_IF_NOT_NAN = function TEST_MIN_IF_NOT_NAN(value, limit) {\n  return !isnan(limit) && (limit < 0 && value <= limit || limit >= 0 && value >= limit);\n};\nexport var VEC_LEN_SQ = function VEC_LEN_SQ() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    _ref$x = _ref.x,\n    x = _ref$x === void 0 ? 0 : _ref$x,\n    _ref$y = _ref.y,\n    y = _ref$y === void 0 ? 0 : _ref$y;\n  return x * x + y * y;\n};\nexport var TEST_MAX_IF_NOT_NAN = function TEST_MAX_IF_NOT_NAN(value, max) {\n  return !isnan(max) && (max < 0 && value < max || max >= 0 && value > max);\n};\nexport function fireAfterInterval(method, interval) {\n  if (!interval) {\n    method();\n    return null;\n  }\n  return setTimeout(function () {\n    return method();\n  }, interval);\n}","map":{"version":3,"sources":["utils.ts"],"names":["isnan","v","Number","isNaN","isValidNumber","TEST_MIN_IF_NOT_NAN","value","limit","VEC_LEN_SQ","x","y","TEST_MAX_IF_NOT_NAN","max","fireAfterInterval","method","interval","setTimeout"],"mappings":"AACA,OAAO,IAAMA,KAAK,GAAIC,SAATD,KAAK,CAAIC,CAAD;EAAA,OAAgBC,MAAM,CAACC,KAAPD,CAAaD,CAAbC,CAA9B;AAAA;AAGP,OAAO,IAAME,aAAa,GAAIH,SAAjBG,aAAa,CAAIH,CAAD;EAAA,OAC3B,OAAOA,CAAP,KAAa,QAAb,IAAyB,CAACC,MAAM,CAACC,KAAPD,CAAaD,CAAbC,CADrB;AAAA;AAGP,OAAO,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAIC,KAAD,EAAgBC,KAAhB;EAAA,OACjC,CAACP,KAAK,CAACO,KAAD,CAAN,KACEA,KAAK,GAAG,CAARA,IAAaD,KAAK,IAAIC,KAAvB,IAAkCA,KAAK,IAAI,CAATA,IAAcD,KAAK,IAAIC,KAD1D,CADK;AAAA;AAGP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAU;EAAA,+EAAuB,CAAA,CAApB;IAAA,cAAGC,CAAC;IAADA,CAAC,uBAAG,CAAN;IAAA,cAASC,CAAC;IAADA,CAAC,uBAAG,CAAA;EAAA,OAAaD,CAAC,GAAGA,CAAJA,GAAQC,CAAC,GAAGA,CAA1D;AAAA;AACP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAIL,KAAD,EAAgBM,GAAhB;EAAA,OACjC,CAACZ,KAAK,CAACY,GAAD,CAAN,KAAiBA,GAAG,GAAG,CAANA,IAAWN,KAAK,GAAGM,GAApB,IAA6BA,GAAG,IAAI,CAAPA,IAAYN,KAAK,GAAGM,GAAjE,CADK;AAAA;AAGP,OAAO,SAASC,iBAAT,CACLC,MADK,EAELC,QAFK,EAGL;EACA,IAAI,CAACA,QAAL,EAAe;IACbD,MAAM,EAAA;IACN,OAAO,IAAP;EACD;EACD,OAAOE,UAAU,CAAC;IAAA,OAAMF,MAAM,EAAb;EAAA,GAAiBC,QAAjB,CAAjB;AACD","sourcesContent":["// TODO(TS) remove if not necessary after rewrite\nexport const isnan = (v: unknown) => Number.isNaN(v);\n\n// TODO(TS) remove if not necessary after rewrite\nexport const isValidNumber = (v: unknown) =>\n  typeof v === 'number' && !Number.isNaN(v);\n\nexport const TEST_MIN_IF_NOT_NAN = (value: number, limit: number): boolean =>\n  !isnan(limit) &&\n  ((limit < 0 && value <= limit) || (limit >= 0 && value >= limit));\nexport const VEC_LEN_SQ = ({ x = 0, y = 0 } = {}) => x * x + y * y;\nexport const TEST_MAX_IF_NOT_NAN = (value: number, max: number) =>\n  !isnan(max) && ((max < 0 && value < max) || (max >= 0 && value > max));\n\nexport function fireAfterInterval(\n  method: () => void,\n  interval?: number | boolean\n) {\n  if (!interval) {\n    method();\n    return null;\n  }\n  return setTimeout(() => method(), interval as number);\n}\n"]},"metadata":{},"sourceType":"module"}