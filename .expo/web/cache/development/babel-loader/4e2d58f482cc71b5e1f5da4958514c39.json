{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { ContinousBaseGesture } from \"./gesture\";\nvar changeEventCalculator = function () {\n  var _f = function _f(current, previous) {\n    var changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        changeX: current.translationX,\n        changeY: current.translationY\n      };\n    } else {\n      changePayload = {\n        changeX: current.translationX - previous.translationX,\n        changeY: current.translationY - previous.translationY\n      };\n    }\n    return _objectSpread(_objectSpread({}, current), changePayload);\n  };\n  _f._closure = {};\n  _f.asString = \"function changeEventCalculator(current,previous){let changePayload;if(previous===undefined){changePayload={changeX:current.translationX,changeY:current.translationY};}else{changePayload={changeX:current.translationX-previous.translationX,changeY:current.translationY-previous.translationY};}return{...current,...changePayload};}\";\n  _f.__workletHash = 7529687435058;\n  _f.__location = \"/Users/jeko/Documents/Reactive-4twiggers-animation/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/panGesture.js (5:0)\";\n  return _f;\n}();\nexport var PanGesture = function (_ContinousBaseGesture) {\n  _inherits(PanGesture, _ContinousBaseGesture);\n  var _super = _createSuper(PanGesture);\n  function PanGesture() {\n    var _this;\n    _classCallCheck(this, PanGesture);\n    _this = _super.call(this);\n    _defineProperty(_assertThisInitialized(_this), \"config\", {});\n    _this.handlerName = 'PanGestureHandler';\n    return _this;\n  }\n  _createClass(PanGesture, [{\n    key: \"activeOffsetY\",\n    value: function activeOffsetY(offset) {\n      if (Array.isArray(offset)) {\n        this.config.activeOffsetYStart = offset[0];\n        this.config.activeOffsetYEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.activeOffsetYStart = offset;\n      } else {\n        this.config.activeOffsetYEnd = offset;\n      }\n      return this;\n    }\n  }, {\n    key: \"activeOffsetX\",\n    value: function activeOffsetX(offset) {\n      if (Array.isArray(offset)) {\n        this.config.activeOffsetXStart = offset[0];\n        this.config.activeOffsetXEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.activeOffsetXStart = offset;\n      } else {\n        this.config.activeOffsetXEnd = offset;\n      }\n      return this;\n    }\n  }, {\n    key: \"failOffsetY\",\n    value: function failOffsetY(offset) {\n      if (Array.isArray(offset)) {\n        this.config.failOffsetYStart = offset[0];\n        this.config.failOffsetYEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.failOffsetYStart = offset;\n      } else {\n        this.config.failOffsetYEnd = offset;\n      }\n      return this;\n    }\n  }, {\n    key: \"failOffsetX\",\n    value: function failOffsetX(offset) {\n      if (Array.isArray(offset)) {\n        this.config.failOffsetXStart = offset[0];\n        this.config.failOffsetXEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.failOffsetXStart = offset;\n      } else {\n        this.config.failOffsetXEnd = offset;\n      }\n      return this;\n    }\n  }, {\n    key: \"minPointers\",\n    value: function minPointers(_minPointers) {\n      this.config.minPointers = _minPointers;\n      return this;\n    }\n  }, {\n    key: \"maxPointers\",\n    value: function maxPointers(_maxPointers) {\n      this.config.maxPointers = _maxPointers;\n      return this;\n    }\n  }, {\n    key: \"minDistance\",\n    value: function minDistance(distance) {\n      this.config.minDist = distance;\n      return this;\n    }\n  }, {\n    key: \"minVelocity\",\n    value: function minVelocity(velocity) {\n      this.config.minVelocity = velocity;\n      return this;\n    }\n  }, {\n    key: \"minVelocityX\",\n    value: function minVelocityX(velocity) {\n      this.config.minVelocityX = velocity;\n      return this;\n    }\n  }, {\n    key: \"minVelocityY\",\n    value: function minVelocityY(velocity) {\n      this.config.minVelocityY = velocity;\n      return this;\n    }\n  }, {\n    key: \"averageTouches\",\n    value: function averageTouches(value) {\n      this.config.avgTouches = value;\n      return this;\n    }\n  }, {\n    key: \"enableTrackpadTwoFingerGesture\",\n    value: function enableTrackpadTwoFingerGesture(value) {\n      this.config.enableTrackpadTwoFingerGesture = value;\n      return this;\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(callback) {\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return _get(_getPrototypeOf(PanGesture.prototype), \"onChange\", this).call(this, callback);\n    }\n  }]);\n  return PanGesture;\n}(ContinousBaseGesture);","map":{"version":3,"mappings":"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","names":["ContinousBaseGesture","changeEventCalculator","current","previous","changePayload","undefined","changeX","translationX","changeY","translationY","PanGesture","constructor","_defineProperty","handlerName","activeOffsetY","offset","Array","isArray","config","activeOffsetYStart","activeOffsetYEnd","activeOffsetX","activeOffsetXStart","activeOffsetXEnd","failOffsetY","failOffsetYStart","failOffsetYEnd","failOffsetX","failOffsetXStart","failOffsetXEnd","minPointers","maxPointers","minDistance","distance","minDist","minVelocity","velocity","minVelocityX","minVelocityY","averageTouches","value","avgTouches","enableTrackpadTwoFingerGesture","onChange","callback","handlers"],"sources":["panGesture.ts"],"sourcesContent":["import { BaseGestureConfig, ContinousBaseGesture } from './gesture';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\nimport {\n  PanGestureConfig,\n  PanGestureHandlerEventPayload,\n} from '../PanGestureHandler';\n\ntype PanGestureChangeEventPayload = {\n  changeX: number;\n  changeY: number;\n};\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<PanGestureHandlerEventPayload>,\n  previous?: GestureUpdateEvent<PanGestureHandlerEventPayload>\n) {\n  'worklet';\n  let changePayload: PanGestureChangeEventPayload;\n  if (previous === undefined) {\n    changePayload = {\n      changeX: current.translationX,\n      changeY: current.translationY,\n    };\n  } else {\n    changePayload = {\n      changeX: current.translationX - previous.translationX,\n      changeY: current.translationY - previous.translationY,\n    };\n  }\n\n  return { ...current, ...changePayload };\n}\n\nexport class PanGesture extends ContinousBaseGesture<\n  PanGestureHandlerEventPayload,\n  PanGestureChangeEventPayload\n> {\n  public config: BaseGestureConfig & PanGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'PanGestureHandler';\n  }\n\n  activeOffsetY(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.activeOffsetYStart = offset[0];\n      this.config.activeOffsetYEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.activeOffsetYStart = offset;\n    } else {\n      this.config.activeOffsetYEnd = offset;\n    }\n    return this;\n  }\n\n  activeOffsetX(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.activeOffsetXStart = offset[0];\n      this.config.activeOffsetXEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.activeOffsetXStart = offset;\n    } else {\n      this.config.activeOffsetXEnd = offset;\n    }\n    return this;\n  }\n\n  failOffsetY(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.failOffsetYStart = offset[0];\n      this.config.failOffsetYEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.failOffsetYStart = offset;\n    } else {\n      this.config.failOffsetYEnd = offset;\n    }\n    return this;\n  }\n\n  failOffsetX(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.failOffsetXStart = offset[0];\n      this.config.failOffsetXEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.failOffsetXStart = offset;\n    } else {\n      this.config.failOffsetXEnd = offset;\n    }\n    return this;\n  }\n\n  minPointers(minPointers: number) {\n    this.config.minPointers = minPointers;\n    return this;\n  }\n\n  maxPointers(maxPointers: number) {\n    this.config.maxPointers = maxPointers;\n    return this;\n  }\n\n  minDistance(distance: number) {\n    this.config.minDist = distance;\n    return this;\n  }\n\n  minVelocity(velocity: number) {\n    this.config.minVelocity = velocity;\n    return this;\n  }\n\n  minVelocityX(velocity: number) {\n    this.config.minVelocityX = velocity;\n    return this;\n  }\n\n  minVelocityY(velocity: number) {\n    this.config.minVelocityY = velocity;\n    return this;\n  }\n\n  averageTouches(value: boolean) {\n    this.config.avgTouches = value;\n    return this;\n  }\n\n  enableTrackpadTwoFingerGesture(value: boolean) {\n    this.config.enableTrackpadTwoFingerGesture = value;\n    return this;\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<\n        PanGestureHandlerEventPayload & PanGestureChangeEventPayload\n      >\n    ) => void\n  ) {\n    // @ts-ignore TS being overprotective, PanGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type PanGestureType = InstanceType<typeof PanGesture>;\n"]},"metadata":{},"sourceType":"module"}