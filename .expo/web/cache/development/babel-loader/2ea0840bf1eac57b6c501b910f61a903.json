{"ast":null,"code":"'use strict';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport AnimatedValue from \"../nodes/AnimatedValue\";\nimport AnimatedValueXY from \"../nodes/AnimatedValueXY\";\nimport AnimatedInterpolation from \"../nodes/AnimatedInterpolation\";\nimport Animation from \"./Animation\";\nimport SpringConfig from \"../SpringConfig\";\nimport invariant from 'fbjs/lib/invariant';\nimport { shouldUseNativeDriver } from \"../NativeAnimatedHelper\";\nvar SpringAnimation = function (_Animation) {\n  _inheritsLoose(SpringAnimation, _Animation);\n  function SpringAnimation(config) {\n    var _config$overshootClam, _config$restDisplacem, _config$restSpeedThre, _config$velocity, _config$velocity2, _config$delay, _config$isInteraction, _config$iterations;\n    var _this;\n    _this = _Animation.call(this) || this;\n    _this._overshootClamping = (_config$overshootClam = config.overshootClamping) !== null && _config$overshootClam !== void 0 ? _config$overshootClam : false;\n    _this._restDisplacementThreshold = (_config$restDisplacem = config.restDisplacementThreshold) !== null && _config$restDisplacem !== void 0 ? _config$restDisplacem : 0.001;\n    _this._restSpeedThreshold = (_config$restSpeedThre = config.restSpeedThreshold) !== null && _config$restSpeedThre !== void 0 ? _config$restSpeedThre : 0.001;\n    _this._initialVelocity = (_config$velocity = config.velocity) !== null && _config$velocity !== void 0 ? _config$velocity : 0;\n    _this._lastVelocity = (_config$velocity2 = config.velocity) !== null && _config$velocity2 !== void 0 ? _config$velocity2 : 0;\n    _this._toValue = config.toValue;\n    _this._delay = (_config$delay = config.delay) !== null && _config$delay !== void 0 ? _config$delay : 0;\n    _this._useNativeDriver = shouldUseNativeDriver(config);\n    _this.__isInteraction = (_config$isInteraction = config.isInteraction) !== null && _config$isInteraction !== void 0 ? _config$isInteraction : !_this._useNativeDriver;\n    _this.__iterations = (_config$iterations = config.iterations) !== null && _config$iterations !== void 0 ? _config$iterations : 1;\n    if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {\n      var _config$stiffness, _config$damping, _config$mass;\n      invariant(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      _this._stiffness = (_config$stiffness = config.stiffness) !== null && _config$stiffness !== void 0 ? _config$stiffness : 100;\n      _this._damping = (_config$damping = config.damping) !== null && _config$damping !== void 0 ? _config$damping : 10;\n      _this._mass = (_config$mass = config.mass) !== null && _config$mass !== void 0 ? _config$mass : 1;\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      var _config$bounciness, _config$speed;\n      invariant(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      var springConfig = SpringConfig.fromBouncinessAndSpeed((_config$bounciness = config.bounciness) !== null && _config$bounciness !== void 0 ? _config$bounciness : 8, (_config$speed = config.speed) !== null && _config$speed !== void 0 ? _config$speed : 12);\n      _this._stiffness = springConfig.stiffness;\n      _this._damping = springConfig.damping;\n      _this._mass = 1;\n    } else {\n      var _config$tension, _config$friction;\n      var _springConfig = SpringConfig.fromOrigamiTensionAndFriction((_config$tension = config.tension) !== null && _config$tension !== void 0 ? _config$tension : 40, (_config$friction = config.friction) !== null && _config$friction !== void 0 ? _config$friction : 7);\n      _this._stiffness = _springConfig.stiffness;\n      _this._damping = _springConfig.damping;\n      _this._mass = 1;\n    }\n    invariant(_this._stiffness > 0, 'Stiffness value must be greater than 0');\n    invariant(_this._damping > 0, 'Damping value must be greater than 0');\n    invariant(_this._mass > 0, 'Mass value must be greater than 0');\n    return _this;\n  }\n  var _proto = SpringAnimation.prototype;\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    var _this$_initialVelocit;\n    return {\n      type: 'spring',\n      overshootClamping: this._overshootClamping,\n      restDisplacementThreshold: this._restDisplacementThreshold,\n      restSpeedThreshold: this._restSpeedThreshold,\n      stiffness: this._stiffness,\n      damping: this._damping,\n      mass: this._mass,\n      initialVelocity: (_this$_initialVelocit = this._initialVelocity) !== null && _this$_initialVelocit !== void 0 ? _this$_initialVelocit : this._lastVelocity,\n      toValue: this._toValue,\n      iterations: this.__iterations\n    };\n  };\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n    var _this2 = this;\n    this.__active = true;\n    this._startPosition = fromValue;\n    this._lastPosition = this._startPosition;\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n    this._lastTime = Date.now();\n    this._frameTime = 0.0;\n    if (previousAnimation instanceof SpringAnimation) {\n      var internalState = previousAnimation.getInternalState();\n      this._lastPosition = internalState.lastPosition;\n      this._lastVelocity = internalState.lastVelocity;\n      this._initialVelocity = this._lastVelocity;\n      this._lastTime = internalState.lastTime;\n    }\n    var start = function start() {\n      if (_this2._useNativeDriver) {\n        _this2.__startNativeAnimation(animatedValue);\n      } else {\n        _this2.onUpdate();\n      }\n    };\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  };\n  _proto.getInternalState = function getInternalState() {\n    return {\n      lastPosition: this._lastPosition,\n      lastVelocity: this._lastVelocity,\n      lastTime: this._lastTime\n    };\n  };\n  _proto.onUpdate = function onUpdate() {\n    var MAX_STEPS = 64;\n    var now = Date.now();\n    if (now > this._lastTime + MAX_STEPS) {\n      now = this._lastTime + MAX_STEPS;\n    }\n    var deltaTime = (now - this._lastTime) / 1000;\n    this._frameTime += deltaTime;\n    var c = this._damping;\n    var m = this._mass;\n    var k = this._stiffness;\n    var v0 = -this._initialVelocity;\n    var zeta = c / (2 * Math.sqrt(k * m));\n    var omega0 = Math.sqrt(k / m);\n    var omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta);\n    var x0 = this._toValue - this._startPosition;\n    var position = 0.0;\n    var velocity = 0.0;\n    var t = this._frameTime;\n    if (zeta < 1) {\n      var envelope = Math.exp(-zeta * omega0 * t);\n      position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t));\n      velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));\n    } else {\n      var _envelope = Math.exp(-omega0 * t);\n      position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);\n      velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n    }\n    this._lastTime = now;\n    this._lastPosition = position;\n    this._lastVelocity = velocity;\n    this._onUpdate(position);\n    if (!this.__active) {\n      return;\n    }\n    var isOvershooting = false;\n    if (this._overshootClamping && this._stiffness !== 0) {\n      if (this._startPosition < this._toValue) {\n        isOvershooting = position > this._toValue;\n      } else {\n        isOvershooting = position < this._toValue;\n      }\n    }\n    var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n    var isDisplacement = true;\n    if (this._stiffness !== 0) {\n      isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n    }\n    if (isOvershooting || isVelocity && isDisplacement) {\n      if (this._stiffness !== 0) {\n        this._lastPosition = this._toValue;\n        this._lastVelocity = 0;\n        this._onUpdate(this._toValue);\n      }\n      this.__debouncedOnEnd({\n        finished: true\n      });\n      return;\n    }\n    this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n  };\n  _proto.stop = function stop() {\n    _Animation.prototype.stop.call(this);\n    this.__active = false;\n    clearTimeout(this._timeout);\n    global.cancelAnimationFrame(this._animationFrame);\n    this.__debouncedOnEnd({\n      finished: false\n    });\n  };\n  return SpringAnimation;\n}(Animation);\nexport default SpringAnimation;","map":{"version":3,"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","AnimatedValue","AnimatedValueXY","AnimatedInterpolation","Animation","SpringConfig","invariant","shouldUseNativeDriver","SpringAnimation","_Animation","config","_config$overshootClam","_config$restDisplacem","_config$restSpeedThre","_config$velocity","_config$velocity2","_config$delay","_config$isInteraction","_config$iterations","_this","call","_overshootClamping","overshootClamping","_restDisplacementThreshold","restDisplacementThreshold","_restSpeedThreshold","restSpeedThreshold","_initialVelocity","velocity","_lastVelocity","_toValue","toValue","_delay","delay","_useNativeDriver","__isInteraction","isInteraction","__iterations","iterations","stiffness","undefined","damping","mass","_config$stiffness","_config$damping","_config$mass","bounciness","speed","tension","friction","_stiffness","_damping","_mass","_config$bounciness","_config$speed","springConfig","fromBouncinessAndSpeed","_config$tension","_config$friction","_springConfig","fromOrigamiTensionAndFriction","_proto","__getNativeAnimationConfig","_this$_initialVelocit","type","initialVelocity","start","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","_this2","__active","_startPosition","_lastPosition","_onUpdate","__onEnd","_lastTime","Date","now","_frameTime","internalState","getInternalState","lastPosition","lastVelocity","lastTime","__startNativeAnimation","_timeout","setTimeout","MAX_STEPS","deltaTime","c","m","k","v0","zeta","Math","sqrt","omega0","omega1","x0","position","t","envelope","exp","sin","cos","_envelope","isOvershooting","isVelocity","abs","isDisplacement","__debouncedOnEnd","finished","_animationFrame","requestAnimationFrame","bind","stop","clearTimeout","global","cancelAnimationFrame"],"sources":["/Users/jeko/Documents/Reactive-4twiggers-animation/node_modules/react-native-web/dist/vendor/react-native/Animated/animations/SpringAnimation.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport AnimatedValue from '../nodes/AnimatedValue';\nimport AnimatedValueXY from '../nodes/AnimatedValueXY';\nimport AnimatedInterpolation from '../nodes/AnimatedInterpolation';\nimport Animation from './Animation';\nimport SpringConfig from '../SpringConfig';\nimport invariant from 'fbjs/lib/invariant';\nimport { shouldUseNativeDriver } from '../NativeAnimatedHelper';\n\nvar SpringAnimation = /*#__PURE__*/function (_Animation) {\n  _inheritsLoose(SpringAnimation, _Animation);\n\n  function SpringAnimation(config) {\n    var _config$overshootClam, _config$restDisplacem, _config$restSpeedThre, _config$velocity, _config$velocity2, _config$delay, _config$isInteraction, _config$iterations;\n\n    var _this;\n\n    _this = _Animation.call(this) || this;\n    _this._overshootClamping = (_config$overshootClam = config.overshootClamping) !== null && _config$overshootClam !== void 0 ? _config$overshootClam : false;\n    _this._restDisplacementThreshold = (_config$restDisplacem = config.restDisplacementThreshold) !== null && _config$restDisplacem !== void 0 ? _config$restDisplacem : 0.001;\n    _this._restSpeedThreshold = (_config$restSpeedThre = config.restSpeedThreshold) !== null && _config$restSpeedThre !== void 0 ? _config$restSpeedThre : 0.001;\n    _this._initialVelocity = (_config$velocity = config.velocity) !== null && _config$velocity !== void 0 ? _config$velocity : 0;\n    _this._lastVelocity = (_config$velocity2 = config.velocity) !== null && _config$velocity2 !== void 0 ? _config$velocity2 : 0;\n    _this._toValue = config.toValue;\n    _this._delay = (_config$delay = config.delay) !== null && _config$delay !== void 0 ? _config$delay : 0;\n    _this._useNativeDriver = shouldUseNativeDriver(config);\n    _this.__isInteraction = (_config$isInteraction = config.isInteraction) !== null && _config$isInteraction !== void 0 ? _config$isInteraction : !_this._useNativeDriver;\n    _this.__iterations = (_config$iterations = config.iterations) !== null && _config$iterations !== void 0 ? _config$iterations : 1;\n\n    if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {\n      var _config$stiffness, _config$damping, _config$mass;\n\n      invariant(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      _this._stiffness = (_config$stiffness = config.stiffness) !== null && _config$stiffness !== void 0 ? _config$stiffness : 100;\n      _this._damping = (_config$damping = config.damping) !== null && _config$damping !== void 0 ? _config$damping : 10;\n      _this._mass = (_config$mass = config.mass) !== null && _config$mass !== void 0 ? _config$mass : 1;\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      var _config$bounciness, _config$speed;\n\n      // Convert the origami bounciness/speed values to stiffness/damping\n      // We assume mass is 1.\n      invariant(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      var springConfig = SpringConfig.fromBouncinessAndSpeed((_config$bounciness = config.bounciness) !== null && _config$bounciness !== void 0 ? _config$bounciness : 8, (_config$speed = config.speed) !== null && _config$speed !== void 0 ? _config$speed : 12);\n      _this._stiffness = springConfig.stiffness;\n      _this._damping = springConfig.damping;\n      _this._mass = 1;\n    } else {\n      var _config$tension, _config$friction;\n\n      // Convert the origami tension/friction values to stiffness/damping\n      // We assume mass is 1.\n      var _springConfig = SpringConfig.fromOrigamiTensionAndFriction((_config$tension = config.tension) !== null && _config$tension !== void 0 ? _config$tension : 40, (_config$friction = config.friction) !== null && _config$friction !== void 0 ? _config$friction : 7);\n\n      _this._stiffness = _springConfig.stiffness;\n      _this._damping = _springConfig.damping;\n      _this._mass = 1;\n    }\n\n    invariant(_this._stiffness > 0, 'Stiffness value must be greater than 0');\n    invariant(_this._damping > 0, 'Damping value must be greater than 0');\n    invariant(_this._mass > 0, 'Mass value must be greater than 0');\n    return _this;\n  }\n\n  var _proto = SpringAnimation.prototype;\n\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    var _this$_initialVelocit;\n\n    return {\n      type: 'spring',\n      overshootClamping: this._overshootClamping,\n      restDisplacementThreshold: this._restDisplacementThreshold,\n      restSpeedThreshold: this._restSpeedThreshold,\n      stiffness: this._stiffness,\n      damping: this._damping,\n      mass: this._mass,\n      initialVelocity: (_this$_initialVelocit = this._initialVelocity) !== null && _this$_initialVelocit !== void 0 ? _this$_initialVelocit : this._lastVelocity,\n      toValue: this._toValue,\n      iterations: this.__iterations\n    };\n  };\n\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n    var _this2 = this;\n\n    this.__active = true;\n    this._startPosition = fromValue;\n    this._lastPosition = this._startPosition;\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n    this._lastTime = Date.now();\n    this._frameTime = 0.0;\n\n    if (previousAnimation instanceof SpringAnimation) {\n      var internalState = previousAnimation.getInternalState();\n      this._lastPosition = internalState.lastPosition;\n      this._lastVelocity = internalState.lastVelocity; // Set the initial velocity to the last velocity\n\n      this._initialVelocity = this._lastVelocity;\n      this._lastTime = internalState.lastTime;\n    }\n\n    var start = function start() {\n      if (_this2._useNativeDriver) {\n        _this2.__startNativeAnimation(animatedValue);\n      } else {\n        _this2.onUpdate();\n      }\n    }; //  If this._delay is more than 0, we start after the timeout.\n\n\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  };\n\n  _proto.getInternalState = function getInternalState() {\n    return {\n      lastPosition: this._lastPosition,\n      lastVelocity: this._lastVelocity,\n      lastTime: this._lastTime\n    };\n  }\n  /**\n   * This spring model is based off of a damped harmonic oscillator\n   * (https://en.wikipedia.org/wiki/Harmonic_oscillator#Damped_harmonic_oscillator).\n   *\n   * We use the closed form of the second order differential equation:\n   *\n   * x'' + (2ζ⍵_0)x' + ⍵^2x = 0\n   *\n   * where\n   *    ⍵_0 = √(k / m) (undamped angular frequency of the oscillator),\n   *    ζ = c / 2√mk (damping ratio),\n   *    c = damping constant\n   *    k = stiffness\n   *    m = mass\n   *\n   * The derivation of the closed form is described in detail here:\n   * http://planetmath.org/sites/default/files/texpdf/39745.pdf\n   *\n   * This algorithm happens to match the algorithm used by CASpringAnimation,\n   * a QuartzCore (iOS) API that creates spring animations.\n   */\n  ;\n\n  _proto.onUpdate = function onUpdate() {\n    // If for some reason we lost a lot of frames (e.g. process large payload or\n    // stopped in the debugger), we only advance by 4 frames worth of\n    // computation and will continue on the next frame. It's better to have it\n    // running at faster speed than jumping to the end.\n    var MAX_STEPS = 64;\n    var now = Date.now();\n\n    if (now > this._lastTime + MAX_STEPS) {\n      now = this._lastTime + MAX_STEPS;\n    }\n\n    var deltaTime = (now - this._lastTime) / 1000;\n    this._frameTime += deltaTime;\n    var c = this._damping;\n    var m = this._mass;\n    var k = this._stiffness;\n    var v0 = -this._initialVelocity;\n    var zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n\n    var omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n\n    var omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta); // exponential decay\n\n    var x0 = this._toValue - this._startPosition; // calculate the oscillation from x0 = 1 to x = 0\n\n    var position = 0.0;\n    var velocity = 0.0;\n    var t = this._frameTime;\n\n    if (zeta < 1) {\n      // Under damped\n      var envelope = Math.exp(-zeta * omega0 * t);\n      position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t)); // This looks crazy -- it's actually just the derivative of the\n      // oscillation function\n\n      velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));\n    } else {\n      // Critically damped\n      var _envelope = Math.exp(-omega0 * t);\n\n      position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);\n      velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n    }\n\n    this._lastTime = now;\n    this._lastPosition = position;\n    this._lastVelocity = velocity;\n\n    this._onUpdate(position);\n\n    if (!this.__active) {\n      // a listener might have stopped us in _onUpdate\n      return;\n    } // Conditions for stopping the spring animation\n\n\n    var isOvershooting = false;\n\n    if (this._overshootClamping && this._stiffness !== 0) {\n      if (this._startPosition < this._toValue) {\n        isOvershooting = position > this._toValue;\n      } else {\n        isOvershooting = position < this._toValue;\n      }\n    }\n\n    var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n\n    var isDisplacement = true;\n\n    if (this._stiffness !== 0) {\n      isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n    }\n\n    if (isOvershooting || isVelocity && isDisplacement) {\n      if (this._stiffness !== 0) {\n        // Ensure that we end up with a round value\n        this._lastPosition = this._toValue;\n        this._lastVelocity = 0;\n\n        this._onUpdate(this._toValue);\n      }\n\n      this.__debouncedOnEnd({\n        finished: true\n      });\n\n      return;\n    }\n\n    this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n  };\n\n  _proto.stop = function stop() {\n    _Animation.prototype.stop.call(this);\n\n    this.__active = false;\n    clearTimeout(this._timeout);\n    global.cancelAnimationFrame(this._animationFrame);\n\n    this.__debouncedOnEnd({\n      finished: false\n    });\n  };\n\n  return SpringAnimation;\n}(Animation);\n\nexport default SpringAnimation;"],"mappings":"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"},"metadata":{},"sourceType":"module"}