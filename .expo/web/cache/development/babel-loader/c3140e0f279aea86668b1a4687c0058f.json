{"ast":null,"code":"import React from 'react';\nimport { always, block } from \"../base\";\nexport default function useCode(nodeFactory, dependencies) {\n  if (!(React.useEffect instanceof Function)) return;\n  React.useEffect(function () {\n    if (!(nodeFactory instanceof Function)) {\n      console.warn('useCode() first argument should be a function that returns an animation node.');\n      var _node = nodeFactory;\n      nodeFactory = function nodeFactory() {\n        return _node;\n      };\n    }\n    var node = nodeFactory();\n    if (node) {\n      if (node instanceof Array) node = block(node);\n      var animatedAlways = always(node);\n      animatedAlways.__attach();\n      return function () {\n        return animatedAlways.__detach();\n      };\n    }\n  }, dependencies);\n}","map":{"version":3,"names":["React","always","block","useCode","nodeFactory","dependencies","useEffect","Function","console","warn","node","Array","animatedAlways","__attach","__detach"],"sources":["/Users/jeko/Documents/Reactive-4twiggers-animation/node_modules/react-native-reanimated/lib/reanimated1/derived/useCode.js"],"sourcesContent":["import React from 'react';\nimport { always, block } from '../base';\n\n/**\n * @callback NodeFactory\n * Function to create a node or an array of nodes.\n * @returns {(Node[] | Node | null | undefined | Boolean)}\n */\n\n/**\n * React hook to run a node.\n * @param {NodeFactory} nodeFactory Function to build the node to run.\n * @param dependencies Array of dependencies. Refresh the node on changes.\n */\nexport default function useCode(nodeFactory, dependencies) {\n  if (!(React.useEffect instanceof Function)) return;\n\n  React.useEffect(() => {\n    // check and correct 1st parameter\n    if (!(nodeFactory instanceof Function)) {\n      console.warn(\n        'useCode() first argument should be a function that returns an animation node.'\n      );\n\n      const node = nodeFactory;\n      nodeFactory = () => node;\n    }\n\n    let node = nodeFactory();\n    if (node) {\n      // allow factory to return array\n      if (node instanceof Array) node = block(node);\n\n      const animatedAlways = always(node);\n      animatedAlways.__attach();\n\n      // return undo function\n      return () => animatedAlways.__detach();\n    }\n  }, dependencies);\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK;AAatB,eAAe,SAASC,OAAO,CAACC,WAAW,EAAEC,YAAY,EAAE;EACzD,IAAI,EAAEL,KAAK,CAACM,SAAS,YAAYC,QAAQ,CAAC,EAAE;EAE5CP,KAAK,CAACM,SAAS,CAAC,YAAM;IAEpB,IAAI,EAAEF,WAAW,YAAYG,QAAQ,CAAC,EAAE;MACtCC,OAAO,CAACC,IAAI,CACV,+EAA+E,CAChF;MAED,IAAMC,KAAI,GAAGN,WAAW;MACxBA,WAAW,GAAG;QAAA,OAAMM,KAAI;MAAA;IAC1B;IAEA,IAAIA,IAAI,GAAGN,WAAW,EAAE;IACxB,IAAIM,IAAI,EAAE;MAER,IAAIA,IAAI,YAAYC,KAAK,EAAED,IAAI,GAAGR,KAAK,CAACQ,IAAI,CAAC;MAE7C,IAAME,cAAc,GAAGX,MAAM,CAACS,IAAI,CAAC;MACnCE,cAAc,CAACC,QAAQ,EAAE;MAGzB,OAAO;QAAA,OAAMD,cAAc,CAACE,QAAQ,EAAE;MAAA;IACxC;EACF,CAAC,EAAET,YAAY,CAAC;AAClB"},"metadata":{},"sourceType":"module"}