{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport NativeReanimatedModule from \"./NativeReanimated\";\nfunction jsListener(eventName, handler) {\n  return function (evt) {\n    handler(_extends(_extends({}, evt.nativeEvent), {\n      eventName: eventName\n    }));\n  };\n}\nvar WorkletEventHandler = function () {\n  function WorkletEventHandler(worklet) {\n    var eventNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    _classCallCheck(this, WorkletEventHandler);\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.reattachNeeded = false;\n    this.listeners = {};\n    this.viewTag = undefined;\n    this.registrations = [];\n    if (!NativeReanimatedModule.native) {\n      this.listeners = eventNames.reduce(function (acc, eventName) {\n        acc[eventName] = jsListener(eventName, worklet);\n        return acc;\n      }, {});\n    }\n  }\n  _createClass(WorkletEventHandler, [{\n    key: \"updateWorklet\",\n    value: function updateWorklet(newWorklet) {\n      this.worklet = newWorklet;\n      this.reattachNeeded = true;\n    }\n  }, {\n    key: \"registerForEvents\",\n    value: function registerForEvents(viewTag, fallbackEventName) {\n      var _this = this;\n      this.viewTag = viewTag;\n      this.registrations = this.eventNames.map(function (eventName) {\n        return NativeReanimatedModule.registerEventHandler(viewTag + eventName, _this.worklet);\n      });\n      if (this.registrations.length === 0 && fallbackEventName) {\n        this.registrations.push(NativeReanimatedModule.registerEventHandler(viewTag + fallbackEventName, this.worklet));\n      }\n    }\n  }, {\n    key: \"unregisterFromEvents\",\n    value: function unregisterFromEvents() {\n      this.registrations.forEach(function (id) {\n        return NativeReanimatedModule.unregisterEventHandler(id);\n      });\n      this.registrations = [];\n    }\n  }]);\n  return WorkletEventHandler;\n}();\nexport { WorkletEventHandler as default };","map":{"version":3,"names":["NativeReanimatedModule","jsListener","eventName","handler","evt","nativeEvent","WorkletEventHandler","worklet","eventNames","reattachNeeded","listeners","viewTag","undefined","registrations","native","reduce","acc","newWorklet","fallbackEventName","map","registerEventHandler","length","push","forEach","id","unregisterEventHandler"],"sources":["/Users/jeko/Documents/Reactive-4twiggers-animation/node_modules/react-native-reanimated/lib/reanimated2/WorkletEventHandler.js"],"sourcesContent":["import NativeReanimatedModule from './NativeReanimated';\nfunction jsListener(eventName, handler) {\n    return (evt) => {\n        handler(Object.assign(Object.assign({}, evt.nativeEvent), { eventName }));\n    };\n}\nexport default class WorkletEventHandler {\n    constructor(worklet, eventNames = []) {\n        this.worklet = worklet;\n        this.eventNames = eventNames;\n        this.reattachNeeded = false;\n        this.listeners = {};\n        this.viewTag = undefined;\n        this.registrations = [];\n        if (!NativeReanimatedModule.native) {\n            this.listeners = eventNames.reduce((acc, eventName) => {\n                acc[eventName] = jsListener(eventName, worklet);\n                return acc;\n            }, {});\n        }\n    }\n    updateWorklet(newWorklet) {\n        this.worklet = newWorklet;\n        this.reattachNeeded = true;\n    }\n    registerForEvents(viewTag, fallbackEventName) {\n        this.viewTag = viewTag;\n        this.registrations = this.eventNames.map((eventName) => NativeReanimatedModule.registerEventHandler(viewTag + eventName, this.worklet));\n        if (this.registrations.length === 0 && fallbackEventName) {\n            this.registrations.push(NativeReanimatedModule.registerEventHandler(viewTag + fallbackEventName, this.worklet));\n        }\n    }\n    unregisterFromEvents() {\n        this.registrations.forEach((id) => NativeReanimatedModule.unregisterEventHandler(id));\n        this.registrations = [];\n    }\n}\n"],"mappings":";;;AAAA,OAAOA,sBAAsB;AAC7B,SAASC,UAAU,CAACC,SAAS,EAAEC,OAAO,EAAE;EACpC,OAAO,UAACC,GAAG,EAAK;IACZD,OAAO,CAAC,SAAc,SAAc,CAAC,CAAC,EAAEC,GAAG,CAACC,WAAW,CAAC,EAAE;MAAEH,SAAS,EAATA;IAAU,CAAC,CAAC,CAAC;EAC7E,CAAC;AACL;AAAC,IACoBI,mBAAmB;EACpC,6BAAYC,OAAO,EAAmB;IAAA,IAAjBC,UAAU,uEAAG,EAAE;IAAA;IAChC,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,cAAc,GAAG,KAAK;IAC3B,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;IACnB,IAAI,CAACC,OAAO,GAAGC,SAAS;IACxB,IAAI,CAACC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACb,sBAAsB,CAACc,MAAM,EAAE;MAChC,IAAI,CAACJ,SAAS,GAAGF,UAAU,CAACO,MAAM,CAAC,UAACC,GAAG,EAAEd,SAAS,EAAK;QACnDc,GAAG,CAACd,SAAS,CAAC,GAAGD,UAAU,CAACC,SAAS,EAAEK,OAAO,CAAC;QAC/C,OAAOS,GAAG;MACd,CAAC,EAAE,CAAC,CAAC,CAAC;IACV;EACJ;EAAC;IAAA;IAAA,OACD,uBAAcC,UAAU,EAAE;MACtB,IAAI,CAACV,OAAO,GAAGU,UAAU;MACzB,IAAI,CAACR,cAAc,GAAG,IAAI;IAC9B;EAAC;IAAA;IAAA,OACD,2BAAkBE,OAAO,EAAEO,iBAAiB,EAAE;MAAA;MAC1C,IAAI,CAACP,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACE,aAAa,GAAG,IAAI,CAACL,UAAU,CAACW,GAAG,CAAC,UAACjB,SAAS;QAAA,OAAKF,sBAAsB,CAACoB,oBAAoB,CAACT,OAAO,GAAGT,SAAS,EAAE,KAAI,CAACK,OAAO,CAAC;MAAA,EAAC;MACvI,IAAI,IAAI,CAACM,aAAa,CAACQ,MAAM,KAAK,CAAC,IAAIH,iBAAiB,EAAE;QACtD,IAAI,CAACL,aAAa,CAACS,IAAI,CAACtB,sBAAsB,CAACoB,oBAAoB,CAACT,OAAO,GAAGO,iBAAiB,EAAE,IAAI,CAACX,OAAO,CAAC,CAAC;MACnH;IACJ;EAAC;IAAA;IAAA,OACD,gCAAuB;MACnB,IAAI,CAACM,aAAa,CAACU,OAAO,CAAC,UAACC,EAAE;QAAA,OAAKxB,sBAAsB,CAACyB,sBAAsB,CAACD,EAAE,CAAC;MAAA,EAAC;MACrF,IAAI,CAACX,aAAa,GAAG,EAAE;IAC3B;EAAC;EAAA;AAAA;AAAA,SA7BgBP,mBAAmB"},"metadata":{},"sourceType":"module"}