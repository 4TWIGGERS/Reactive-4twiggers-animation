{"ast":null,"code":"var slice = Array.prototype.slice;\nexport default function createOrderedCSSStyleSheet(sheet) {\n  var groups = {};\n  var selectors = {};\n  if (sheet != null) {\n    var group;\n    slice.call(sheet.cssRules).forEach(function (cssRule, i) {\n      var cssText = cssRule.cssText;\n      if (cssText.indexOf('stylesheet-group') > -1) {\n        group = decodeGroupRule(cssRule);\n        groups[group] = {\n          start: i,\n          rules: [cssText]\n        };\n      } else {\n        var selectorText = getSelectorText(cssText);\n        if (selectorText != null) {\n          selectors[selectorText] = true;\n          groups[group].rules.push(cssText);\n        }\n      }\n    });\n  }\n  function sheetInsert(sheet, group, text) {\n    var orderedGroups = getOrderedGroups(groups);\n    var groupIndex = orderedGroups.indexOf(group);\n    var nextGroupIndex = groupIndex + 1;\n    var nextGroup = orderedGroups[nextGroupIndex];\n    var position = nextGroup != null && groups[nextGroup].start != null ? groups[nextGroup].start : sheet.cssRules.length;\n    var isInserted = insertRuleAt(sheet, text, position);\n    if (isInserted) {\n      if (groups[group].start == null) {\n        groups[group].start = position;\n      }\n      for (var i = nextGroupIndex; i < orderedGroups.length; i += 1) {\n        var groupNumber = orderedGroups[i];\n        var previousStart = groups[groupNumber].start || 0;\n        groups[groupNumber].start = previousStart + 1;\n      }\n    }\n    return isInserted;\n  }\n  var OrderedCSSStyleSheet = {\n    getTextContent: function getTextContent() {\n      return getOrderedGroups(groups).map(function (group) {\n        var rules = groups[group].rules;\n        return rules.join('\\n');\n      }).join('\\n');\n    },\n    insert: function insert(cssText, groupValue) {\n      var group = Number(groupValue);\n      if (groups[group] == null) {\n        var markerRule = encodeGroupRule(group);\n        groups[group] = {\n          start: null,\n          rules: [markerRule]\n        };\n        if (sheet != null) {\n          sheetInsert(sheet, group, markerRule);\n        }\n      }\n      var selectorText = getSelectorText(cssText);\n      if (selectorText != null && selectors[selectorText] == null) {\n        selectors[selectorText] = true;\n        groups[group].rules.push(cssText);\n        if (sheet != null) {\n          var isInserted = sheetInsert(sheet, group, cssText);\n          if (!isInserted) {\n            groups[group].rules.pop();\n          }\n        }\n      }\n    }\n  };\n  return OrderedCSSStyleSheet;\n}\nfunction encodeGroupRule(group) {\n  return \"[stylesheet-group=\\\"\" + group + \"\\\"]{}\";\n}\nfunction decodeGroupRule(cssRule) {\n  return Number(cssRule.selectorText.split(/[\"']/)[1]);\n}\nfunction getOrderedGroups(obj) {\n  return Object.keys(obj).map(Number).sort(function (a, b) {\n    return a > b ? 1 : -1;\n  });\n}\nvar pattern = /\\s*([,])\\s*/g;\nfunction getSelectorText(cssText) {\n  var selector = cssText.split('{')[0].trim();\n  return selector !== '' ? selector.replace(pattern, '$1') : null;\n}\nfunction insertRuleAt(root, cssText, position) {\n  try {\n    root.insertRule(cssText, position);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","map":{"version":3,"names":["slice","Array","prototype","createOrderedCSSStyleSheet","sheet","groups","selectors","group","call","cssRules","forEach","cssRule","i","cssText","indexOf","decodeGroupRule","start","rules","selectorText","getSelectorText","push","sheetInsert","text","orderedGroups","getOrderedGroups","groupIndex","nextGroupIndex","nextGroup","position","length","isInserted","insertRuleAt","groupNumber","previousStart","OrderedCSSStyleSheet","getTextContent","map","join","insert","groupValue","Number","markerRule","encodeGroupRule","pop","split","obj","Object","keys","sort","a","b","pattern","selector","trim","replace","root","insertRule","e"],"sources":["/Users/jeko/Documents/Reactive-4twiggers-animation/node_modules/react-native-web/dist/exports/StyleSheet/createOrderedCSSStyleSheet.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar slice = Array.prototype.slice;\n/**\n * Order-based insertion of CSS.\n *\n * Each rule is associated with a numerically defined group.\n * Groups are ordered within the style sheet according to their number, with the\n * lowest first.\n *\n * Groups are implemented using marker rules. The selector of the first rule of\n * each group is used only to encode the group number for hydration. An\n * alternative implementation could rely on CSSMediaRule, allowing groups to be\n * treated as a sub-sheet, but the Edge implementation of CSSMediaRule is\n * broken.\n * https://developer.mozilla.org/en-US/docs/Web/API/CSSMediaRule\n * https://gist.github.com/necolas/aa0c37846ad6bd3b05b727b959e82674\n */\n\nexport default function createOrderedCSSStyleSheet(sheet) {\n  var groups = {};\n  var selectors = {};\n  /**\n   * Hydrate approximate record from any existing rules in the sheet.\n   */\n\n  if (sheet != null) {\n    var group;\n    slice.call(sheet.cssRules).forEach(function (cssRule, i) {\n      var cssText = cssRule.cssText; // Create record of existing selectors and rules\n\n      if (cssText.indexOf('stylesheet-group') > -1) {\n        group = decodeGroupRule(cssRule);\n        groups[group] = {\n          start: i,\n          rules: [cssText]\n        };\n      } else {\n        var selectorText = getSelectorText(cssText);\n\n        if (selectorText != null) {\n          selectors[selectorText] = true;\n          groups[group].rules.push(cssText);\n        }\n      }\n    });\n  }\n\n  function sheetInsert(sheet, group, text) {\n    var orderedGroups = getOrderedGroups(groups);\n    var groupIndex = orderedGroups.indexOf(group);\n    var nextGroupIndex = groupIndex + 1;\n    var nextGroup = orderedGroups[nextGroupIndex]; // Insert rule before the next group, or at the end of the stylesheet\n\n    var position = nextGroup != null && groups[nextGroup].start != null ? groups[nextGroup].start : sheet.cssRules.length;\n    var isInserted = insertRuleAt(sheet, text, position);\n\n    if (isInserted) {\n      // Set the starting index of the new group\n      if (groups[group].start == null) {\n        groups[group].start = position;\n      } // Increment the starting index of all subsequent groups\n\n\n      for (var i = nextGroupIndex; i < orderedGroups.length; i += 1) {\n        var groupNumber = orderedGroups[i];\n        var previousStart = groups[groupNumber].start || 0;\n        groups[groupNumber].start = previousStart + 1;\n      }\n    }\n\n    return isInserted;\n  }\n\n  var OrderedCSSStyleSheet = {\n    /**\n     * The textContent of the style sheet.\n     */\n    getTextContent: function getTextContent() {\n      return getOrderedGroups(groups).map(function (group) {\n        var rules = groups[group].rules;\n        return rules.join('\\n');\n      }).join('\\n');\n    },\n\n    /**\n     * Insert a rule into the style sheet\n     */\n    insert: function insert(cssText, groupValue) {\n      var group = Number(groupValue); // Create a new group.\n\n      if (groups[group] == null) {\n        var markerRule = encodeGroupRule(group); // Create the internal record.\n\n        groups[group] = {\n          start: null,\n          rules: [markerRule]\n        }; // Update CSSOM.\n\n        if (sheet != null) {\n          sheetInsert(sheet, group, markerRule);\n        }\n      } // selectorText is more reliable than cssText for insertion checks. The\n      // browser excludes vendor-prefixed properties and rewrites certain values\n      // making cssText more likely to be different from what was inserted.\n\n\n      var selectorText = getSelectorText(cssText);\n\n      if (selectorText != null && selectors[selectorText] == null) {\n        // Update the internal records.\n        selectors[selectorText] = true;\n        groups[group].rules.push(cssText); // Update CSSOM.\n\n        if (sheet != null) {\n          var isInserted = sheetInsert(sheet, group, cssText);\n\n          if (!isInserted) {\n            // Revert internal record change if a rule was rejected (e.g.,\n            // unrecognized pseudo-selector)\n            groups[group].rules.pop();\n          }\n        }\n      }\n    }\n  };\n  return OrderedCSSStyleSheet;\n}\n/**\n * Helper functions\n */\n\nfunction encodeGroupRule(group) {\n  return \"[stylesheet-group=\\\"\" + group + \"\\\"]{}\";\n}\n\nfunction decodeGroupRule(cssRule) {\n  return Number(cssRule.selectorText.split(/[\"']/)[1]);\n}\n\nfunction getOrderedGroups(obj) {\n  return Object.keys(obj).map(Number).sort(function (a, b) {\n    return a > b ? 1 : -1;\n  });\n}\n\nvar pattern = /\\s*([,])\\s*/g;\n\nfunction getSelectorText(cssText) {\n  var selector = cssText.split('{')[0].trim();\n  return selector !== '' ? selector.replace(pattern, '$1') : null;\n}\n\nfunction insertRuleAt(root, cssText, position) {\n  try {\n    // $FlowFixMe: Flow is missing CSSOM types needed to type 'root'.\n    root.insertRule(cssText, position);\n    return true;\n  } catch (e) {\n    // JSDOM doesn't support `CSSSMediaRule#insertRule`.\n    // Also ignore errors that occur from attempting to insert vendor-prefixed selectors.\n    return false;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}