{"ast":null,"code":"import { addWhitelistedNativeProps } from \"../ConfigHelper\";\nexport function createAnimatedPropAdapter(adapter, nativeProps) {\n  var nativePropsToAdd = {};\n  nativeProps === null || nativeProps === void 0 ? void 0 : nativeProps.forEach(function (prop) {\n    nativePropsToAdd[prop] = true;\n  });\n  addWhitelistedNativeProps(nativePropsToAdd);\n  return adapter;\n}\nexport var SVGAdapter = createAnimatedPropAdapter(function () {\n  var _f = function _f(props) {\n    var _a, _b;\n    var keys = Object.keys(props);\n    if (keys.includes('transform')) {\n      if (Array.isArray(props.transform)) {\n        if (props.transform.length !== 6) {\n          throw new Error(\"invalid transform length of \" + props.transform.length + \", should be 6\");\n        }\n        var transform = props.transform;\n        var x = (_a = props.x) !== null && _a !== void 0 ? _a : 0;\n        var y = (_b = props.y) !== null && _b !== void 0 ? _b : 0;\n        props.transform = [{\n          translateX: transform[0] * x + transform[2] * y + transform[4]\n        }, {\n          translateY: transform[1] * x + transform[3] * y + transform[5]\n        }];\n      } else if (typeof props.transform === 'string') {\n        var _transform = props.transform;\n        var arr = _transform.replace('translate(', '').replace(')', '').split(' ');\n        props.transform = [{\n          translateX: parseFloat(arr[0])\n        }, {\n          translateY: parseFloat(arr[1])\n        }];\n      }\n    }\n  };\n  _f._closure = {};\n  _f.asString = \"function _f(props){var _a,_b;const keys=Object.keys(props);if(keys.includes('transform')){if(Array.isArray(props.transform)){if(props.transform.length!==6){throw new Error(\\\"invalid transform length of \\\"+props.transform.length+\\\", should be 6\\\");}const transform=props.transform;const x=(_a=props.x)!==null&&_a!==void 0?_a:0;const y=(_b=props.y)!==null&&_b!==void 0?_b:0;props.transform=[{translateX:transform[0]*x+transform[2]*y+transform[4]},{translateY:transform[1]*x+transform[3]*y+transform[5]}];}else if(typeof props.transform==='string'){const transform=props.transform;const arr=transform.replace('translate(','').replace(')','').split(' ');props.transform=[{translateX:parseFloat(arr[0])},{translateY:parseFloat(arr[1])}];}}}\";\n  _f.__workletHash = 16686379129404;\n  _f.__location = \"/Users/jeko/Documents/Reactive-4twiggers-animation/node_modules/react-native-reanimated/lib/reanimated2/PropAdapters.js (12:52)\";\n  return _f;\n}());\nexport var TextInputAdapter = createAnimatedPropAdapter(function () {\n  var _f = function _f(props) {\n    var keys = Object.keys(props);\n    if (keys.includes('value')) {\n      props.text = props.value;\n      delete props.value;\n    }\n  };\n  _f._closure = {};\n  _f.asString = \"function _f(props){const keys=Object.keys(props);if(keys.includes('value')){props.text=props.value;delete props.value;}}\";\n  _f.__workletHash = 10968732584604;\n  _f.__location = \"/Users/jeko/Documents/Reactive-4twiggers-animation/node_modules/react-native-reanimated/lib/reanimated2/PropAdapters.js (47:58)\";\n  return _f;\n}(), ['text']);","map":{"version":3,"names":["addWhitelistedNativeProps","createAnimatedPropAdapter","adapter","nativeProps","nativePropsToAdd","forEach","prop","SVGAdapter","props","_a","_b","keys","Object","includes","Array","isArray","transform","length","Error","x","y","translateX","translateY","arr","replace","split","parseFloat","TextInputAdapter","text","value"],"sources":["/Users/jeko/Documents/Reactive-4twiggers-animation/node_modules/react-native-reanimated/lib/reanimated2/PropAdapters.js"],"sourcesContent":["import { addWhitelistedNativeProps } from '../ConfigHelper';\nexport function createAnimatedPropAdapter(adapter, nativeProps) {\n    const nativePropsToAdd = {};\n    // eslint-disable-next-line no-unused-expressions\n    nativeProps === null || nativeProps === void 0 ? void 0 : nativeProps.forEach((prop) => {\n        nativePropsToAdd[prop] = true;\n    });\n    addWhitelistedNativeProps(nativePropsToAdd);\n    return adapter;\n}\n// ADAPTERS\nexport const SVGAdapter = createAnimatedPropAdapter((props) => {\n    'worklet';\n    var _a, _b;\n    const keys = Object.keys(props);\n    // transform\n    if (keys.includes('transform')) {\n        if (Array.isArray(props.transform)) {\n            // case of array with 6 values => https://github.com/react-native-svg/react-native-svg/blob/b2e2c355204ff4b10973d3afce1495f7e4167ff7/src/elements/Shape.tsx#L200\n            if (props.transform.length !== 6) {\n                throw new Error(`invalid transform length of ${props.transform.length}, should be 6`);\n            }\n            const transform = props.transform;\n            const x = (_a = props.x) !== null && _a !== void 0 ? _a : 0;\n            const y = (_b = props.y) !== null && _b !== void 0 ? _b : 0;\n            props.transform = [\n                { translateX: transform[0] * x + transform[2] * y + transform[4] },\n                { translateY: transform[1] * x + transform[3] * y + transform[5] },\n            ];\n        }\n        else if (typeof props.transform === 'string') {\n            // case of string 'translate(translateX translateY)'\n            // todo: handle other cases of transform string like here https://github.com/react-native-svg/react-native-svg/blob/b2e2c355204ff4b10973d3afce1495f7e4167ff7/src/lib/extract/extractTransform.ts#L184\n            const transform = props.transform;\n            const arr = transform\n                .replace('translate(', '')\n                .replace(')', '')\n                .split(' ');\n            props.transform = [\n                { translateX: parseFloat(arr[0]) },\n                { translateY: parseFloat(arr[1]) },\n            ];\n        }\n    }\n    // todo: other props\n});\nexport const TextInputAdapter = createAnimatedPropAdapter((props) => {\n    'worklet';\n    const keys = Object.keys(props);\n    // convert text to value like RN does here: https://github.com/facebook/react-native/blob/f2c6279ca497b34d5a2bfbb6f2d33dc7a7bea02a/Libraries/Components/TextInput/TextInput.js#L878\n    if (keys.includes('value')) {\n        props.text = props.value;\n        delete props.value;\n    }\n}, ['text']);\n"],"mappings":"AAAA,SAASA,yBAAyB;AAClC,OAAO,SAASC,yBAAyB,CAACC,OAAO,EAAEC,WAAW,EAAE;EAC5D,IAAMC,gBAAgB,GAAG,CAAC,CAAC;EAE3BD,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,WAAW,CAACE,OAAO,CAAC,UAACC,IAAI,EAAK;IACpFF,gBAAgB,CAACE,IAAI,CAAC,GAAG,IAAI;EACjC,CAAC,CAAC;EACFN,yBAAyB,CAACI,gBAAgB,CAAC;EAC3C,OAAOF,OAAO;AAClB;AAEA,OAAO,IAAMK,UAAU,GAAGN,yBAAyB;EAAA,qBAAEO,KAAK,EAAK;IAE3D,IAAIC,EAAE,EAAEC,EAAE;IACV,IAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACH,KAAK,CAAC;IAE/B,IAAIG,IAAI,CAACE,QAAQ,CAAC,WAAW,CAAC,EAAE;MAC5B,IAAIC,KAAK,CAACC,OAAO,CAACP,KAAK,CAACQ,SAAS,CAAC,EAAE;QAEhC,IAAIR,KAAK,CAACQ,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;UAC9B,MAAM,IAAIC,KAAK,kCAAgCV,KAAK,CAACQ,SAAS,CAACC,MAAM,mBAAgB;QACzF;QACA,IAAMD,SAAS,GAAGR,KAAK,CAACQ,SAAS;QACjC,IAAMG,CAAC,GAAG,CAACV,EAAE,GAAGD,KAAK,CAACW,CAAC,MAAM,IAAI,IAAIV,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC;QAC3D,IAAMW,CAAC,GAAG,CAACV,EAAE,GAAGF,KAAK,CAACY,CAAC,MAAM,IAAI,IAAIV,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC;QAC3DF,KAAK,CAACQ,SAAS,GAAG,CACd;UAAEK,UAAU,EAAEL,SAAS,CAAC,CAAC,CAAC,GAAGG,CAAC,GAAGH,SAAS,CAAC,CAAC,CAAC,GAAGI,CAAC,GAAGJ,SAAS,CAAC,CAAC;QAAE,CAAC,EAClE;UAAEM,UAAU,EAAEN,SAAS,CAAC,CAAC,CAAC,GAAGG,CAAC,GAAGH,SAAS,CAAC,CAAC,CAAC,GAAGI,CAAC,GAAGJ,SAAS,CAAC,CAAC;QAAE,CAAC,CACrE;MACL,CAAC,MACI,IAAI,OAAOR,KAAK,CAACQ,SAAS,KAAK,QAAQ,EAAE;QAG1C,IAAMA,UAAS,GAAGR,KAAK,CAACQ,SAAS;QACjC,IAAMO,GAAG,GAAGP,UAAS,CAChBQ,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CACzBA,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAChBC,KAAK,CAAC,GAAG,CAAC;QACfjB,KAAK,CAACQ,SAAS,GAAG,CACd;UAAEK,UAAU,EAAEK,UAAU,CAACH,GAAG,CAAC,CAAC,CAAC;QAAE,CAAC,EAClC;UAAED,UAAU,EAAEI,UAAU,CAACH,GAAG,CAAC,CAAC,CAAC;QAAE,CAAC,CACrC;MACL;IACJ;EAEJ,CAAC;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA,IAAC;AACF,OAAO,IAAMI,gBAAgB,GAAG1B,yBAAyB;EAAA,qBAAEO,KAAK,EAAK;IAEjE,IAAMG,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACH,KAAK,CAAC;IAE/B,IAAIG,IAAI,CAACE,QAAQ,CAAC,OAAO,CAAC,EAAE;MACxBL,KAAK,CAACoB,IAAI,GAAGpB,KAAK,CAACqB,KAAK;MACxB,OAAOrB,KAAK,CAACqB,KAAK;IACtB;EACJ,CAAC;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA,KAAE,CAAC,MAAM,CAAC,CAAC"},"metadata":{},"sourceType":"module"}