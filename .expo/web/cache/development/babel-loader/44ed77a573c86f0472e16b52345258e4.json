{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport AccessibilityUtil from \"../AccessibilityUtil\";\nimport css from \"../../exports/StyleSheet/css\";\nimport StyleSheet from \"../../exports/StyleSheet\";\nimport styleResolver from \"../../exports/StyleSheet/styleResolver\";\nimport { STYLE_GROUPS } from \"../../exports/StyleSheet/constants\";\nvar emptyObject = {};\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\nvar uppercasePattern = /[A-Z]/g;\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase();\n}\nfunction hyphenateString(str) {\n  return str.replace(uppercasePattern, toHyphenLower);\n}\nfunction processIDRefList(idRefList) {\n  return isArray(idRefList) ? idRefList.join(' ') : idRefList;\n}\nvar classes = css.create({\n  reset: {\n    backgroundColor: 'transparent',\n    color: 'inherit',\n    font: 'inherit',\n    listStyle: 'none',\n    margin: 0,\n    textAlign: 'inherit',\n    textDecoration: 'none'\n  },\n  cursor: {\n    cursor: 'pointer'\n  }\n}, STYLE_GROUPS.classicReset);\nvar pointerEventsStyles = StyleSheet.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\nvar createDOMProps = function createDOMProps(elementType, props) {\n  if (!props) {\n    props = emptyObject;\n  }\n  var _props = props,\n    accessibilityActiveDescendant = _props.accessibilityActiveDescendant,\n    accessibilityAtomic = _props.accessibilityAtomic,\n    accessibilityAutoComplete = _props.accessibilityAutoComplete,\n    accessibilityBusy = _props.accessibilityBusy,\n    accessibilityChecked = _props.accessibilityChecked,\n    accessibilityColumnCount = _props.accessibilityColumnCount,\n    accessibilityColumnIndex = _props.accessibilityColumnIndex,\n    accessibilityColumnSpan = _props.accessibilityColumnSpan,\n    accessibilityControls = _props.accessibilityControls,\n    accessibilityCurrent = _props.accessibilityCurrent,\n    accessibilityDescribedBy = _props.accessibilityDescribedBy,\n    accessibilityDetails = _props.accessibilityDetails,\n    accessibilityDisabled = _props.accessibilityDisabled,\n    accessibilityErrorMessage = _props.accessibilityErrorMessage,\n    accessibilityExpanded = _props.accessibilityExpanded,\n    accessibilityFlowTo = _props.accessibilityFlowTo,\n    accessibilityHasPopup = _props.accessibilityHasPopup,\n    accessibilityHidden = _props.accessibilityHidden,\n    accessibilityInvalid = _props.accessibilityInvalid,\n    accessibilityKeyShortcuts = _props.accessibilityKeyShortcuts,\n    accessibilityLabel = _props.accessibilityLabel,\n    accessibilityLabelledBy = _props.accessibilityLabelledBy,\n    accessibilityLevel = _props.accessibilityLevel,\n    accessibilityLiveRegion = _props.accessibilityLiveRegion,\n    accessibilityModal = _props.accessibilityModal,\n    accessibilityMultiline = _props.accessibilityMultiline,\n    accessibilityMultiSelectable = _props.accessibilityMultiSelectable,\n    accessibilityOrientation = _props.accessibilityOrientation,\n    accessibilityOwns = _props.accessibilityOwns,\n    accessibilityPlaceholder = _props.accessibilityPlaceholder,\n    accessibilityPosInSet = _props.accessibilityPosInSet,\n    accessibilityPressed = _props.accessibilityPressed,\n    accessibilityReadOnly = _props.accessibilityReadOnly,\n    accessibilityRequired = _props.accessibilityRequired,\n    accessibilityRole = _props.accessibilityRole,\n    accessibilityRoleDescription = _props.accessibilityRoleDescription,\n    accessibilityRowCount = _props.accessibilityRowCount,\n    accessibilityRowIndex = _props.accessibilityRowIndex,\n    accessibilityRowSpan = _props.accessibilityRowSpan,\n    accessibilitySelected = _props.accessibilitySelected,\n    accessibilitySetSize = _props.accessibilitySetSize,\n    accessibilitySort = _props.accessibilitySort,\n    accessibilityValueMax = _props.accessibilityValueMax,\n    accessibilityValueMin = _props.accessibilityValueMin,\n    accessibilityValueNow = _props.accessibilityValueNow,\n    accessibilityValueText = _props.accessibilityValueText,\n    classList = _props.classList,\n    dataSet = _props.dataSet,\n    focusable = _props.focusable,\n    nativeID = _props.nativeID,\n    pointerEvents = _props.pointerEvents,\n    providedStyle = _props.style,\n    testID = _props.testID,\n    accessible = _props.accessible,\n    accessibilityState = _props.accessibilityState,\n    accessibilityValue = _props.accessibilityValue,\n    domProps = _objectWithoutPropertiesLoose(_props, [\"accessibilityActiveDescendant\", \"accessibilityAtomic\", \"accessibilityAutoComplete\", \"accessibilityBusy\", \"accessibilityChecked\", \"accessibilityColumnCount\", \"accessibilityColumnIndex\", \"accessibilityColumnSpan\", \"accessibilityControls\", \"accessibilityCurrent\", \"accessibilityDescribedBy\", \"accessibilityDetails\", \"accessibilityDisabled\", \"accessibilityErrorMessage\", \"accessibilityExpanded\", \"accessibilityFlowTo\", \"accessibilityHasPopup\", \"accessibilityHidden\", \"accessibilityInvalid\", \"accessibilityKeyShortcuts\", \"accessibilityLabel\", \"accessibilityLabelledBy\", \"accessibilityLevel\", \"accessibilityLiveRegion\", \"accessibilityModal\", \"accessibilityMultiline\", \"accessibilityMultiSelectable\", \"accessibilityOrientation\", \"accessibilityOwns\", \"accessibilityPlaceholder\", \"accessibilityPosInSet\", \"accessibilityPressed\", \"accessibilityReadOnly\", \"accessibilityRequired\", \"accessibilityRole\", \"accessibilityRoleDescription\", \"accessibilityRowCount\", \"accessibilityRowIndex\", \"accessibilityRowSpan\", \"accessibilitySelected\", \"accessibilitySetSize\", \"accessibilitySort\", \"accessibilityValueMax\", \"accessibilityValueMin\", \"accessibilityValueNow\", \"accessibilityValueText\", \"classList\", \"dataSet\", \"focusable\", \"nativeID\", \"pointerEvents\", \"style\", \"testID\", \"accessible\", \"accessibilityState\", \"accessibilityValue\"]);\n  var disabled = accessibilityState != null && accessibilityState.disabled === true || accessibilityDisabled;\n  var role = AccessibilityUtil.propsToAriaRole(props);\n  if (accessibilityState != null) {\n    for (var prop in accessibilityState) {\n      var value = accessibilityState[prop];\n      if (value != null) {\n        if (prop === 'disabled' || prop === 'hidden') {\n          if (value === true) {\n            domProps[\"aria-\" + prop] = value;\n            domProps[prop] = value;\n          }\n        } else {\n          domProps[\"aria-\" + prop] = value;\n        }\n      }\n    }\n  }\n  if (accessibilityValue != null) {\n    for (var _prop in accessibilityValue) {\n      var _value = accessibilityValue[_prop];\n      if (_value != null) {\n        domProps[\"aria-value\" + _prop] = _value;\n      }\n    }\n  }\n  if (accessibilityActiveDescendant != null) {\n    domProps['aria-activedescendant'] = accessibilityActiveDescendant;\n  }\n  if (accessibilityAtomic != null) {\n    domProps['aria-atomic'] = accessibilityAtomic;\n  }\n  if (accessibilityAutoComplete != null) {\n    domProps['aria-autocomplete'] = accessibilityAutoComplete;\n  }\n  if (accessibilityBusy != null) {\n    domProps['aria-busy'] = accessibilityBusy;\n  }\n  if (accessibilityChecked != null) {\n    domProps['aria-checked'] = accessibilityChecked;\n  }\n  if (accessibilityColumnCount != null) {\n    domProps['aria-colcount'] = accessibilityColumnCount;\n  }\n  if (accessibilityColumnIndex != null) {\n    domProps['aria-colindex'] = accessibilityColumnIndex;\n  }\n  if (accessibilityColumnSpan != null) {\n    domProps['aria-colspan'] = accessibilityColumnSpan;\n  }\n  if (accessibilityControls != null) {\n    domProps['aria-controls'] = processIDRefList(accessibilityControls);\n  }\n  if (accessibilityCurrent != null) {\n    domProps['aria-current'] = accessibilityCurrent;\n  }\n  if (accessibilityDescribedBy != null) {\n    domProps['aria-describedby'] = processIDRefList(accessibilityDescribedBy);\n  }\n  if (accessibilityDetails != null) {\n    domProps['aria-details'] = accessibilityDetails;\n  }\n  if (disabled === true) {\n    domProps['aria-disabled'] = true;\n    if (elementType === 'button' || elementType === 'form' || elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.disabled = true;\n    }\n  }\n  if (accessibilityErrorMessage != null) {\n    domProps['aria-errormessage'] = accessibilityErrorMessage;\n  }\n  if (accessibilityExpanded != null) {\n    domProps['aria-expanded'] = accessibilityExpanded;\n  }\n  if (accessibilityFlowTo != null) {\n    domProps['aria-flowto'] = processIDRefList(accessibilityFlowTo);\n  }\n  if (accessibilityHasPopup != null) {\n    domProps['aria-haspopup'] = accessibilityHasPopup;\n  }\n  if (accessibilityHidden === true) {\n    domProps['aria-hidden'] = accessibilityHidden;\n  }\n  if (accessibilityInvalid != null) {\n    domProps['aria-invalid'] = accessibilityInvalid;\n  }\n  if (accessibilityKeyShortcuts != null && Array.isArray(accessibilityKeyShortcuts)) {\n    domProps['aria-keyshortcuts'] = accessibilityKeyShortcuts.join(' ');\n  }\n  if (accessibilityLabel != null) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n  if (accessibilityLabelledBy != null) {\n    domProps['aria-labelledby'] = processIDRefList(accessibilityLabelledBy);\n  }\n  if (accessibilityLevel != null) {\n    domProps['aria-level'] = accessibilityLevel;\n  }\n  if (accessibilityLiveRegion != null) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n  if (accessibilityModal != null) {\n    domProps['aria-modal'] = accessibilityModal;\n  }\n  if (accessibilityMultiline != null) {\n    domProps['aria-multiline'] = accessibilityMultiline;\n  }\n  if (accessibilityMultiSelectable != null) {\n    domProps['aria-multiselectable'] = accessibilityMultiSelectable;\n  }\n  if (accessibilityOrientation != null) {\n    domProps['aria-orientation'] = accessibilityOrientation;\n  }\n  if (accessibilityOwns != null) {\n    domProps['aria-owns'] = processIDRefList(accessibilityOwns);\n  }\n  if (accessibilityPlaceholder != null) {\n    domProps['aria-placeholder'] = accessibilityPlaceholder;\n  }\n  if (accessibilityPosInSet != null) {\n    domProps['aria-posinset'] = accessibilityPosInSet;\n  }\n  if (accessibilityPressed != null) {\n    domProps['aria-pressed'] = accessibilityPressed;\n  }\n  if (accessibilityReadOnly != null) {\n    domProps['aria-readonly'] = accessibilityReadOnly;\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.readOnly = true;\n    }\n  }\n  if (accessibilityRequired != null) {\n    domProps['aria-required'] = accessibilityRequired;\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.required = true;\n    }\n  }\n  if (role != null) {\n    domProps['role'] = role === 'none' ? 'presentation' : role;\n  }\n  if (accessibilityRoleDescription != null) {\n    domProps['aria-roledescription'] = accessibilityRoleDescription;\n  }\n  if (accessibilityRowCount != null) {\n    domProps['aria-rowcount'] = accessibilityRowCount;\n  }\n  if (accessibilityRowIndex != null) {\n    domProps['aria-rowindex'] = accessibilityRowIndex;\n  }\n  if (accessibilityRowSpan != null) {\n    domProps['aria-rowspan'] = accessibilityRowSpan;\n  }\n  if (accessibilitySelected != null) {\n    domProps['aria-selected'] = accessibilitySelected;\n  }\n  if (accessibilitySetSize != null) {\n    domProps['aria-setsize'] = accessibilitySetSize;\n  }\n  if (accessibilitySort != null) {\n    domProps['aria-sort'] = accessibilitySort;\n  }\n  if (accessibilityValueMax != null) {\n    domProps['aria-valuemax'] = accessibilityValueMax;\n  }\n  if (accessibilityValueMin != null) {\n    domProps['aria-valuemin'] = accessibilityValueMin;\n  }\n  if (accessibilityValueNow != null) {\n    domProps['aria-valuenow'] = accessibilityValueNow;\n  }\n  if (accessibilityValueText != null) {\n    domProps['aria-valuetext'] = accessibilityValueText;\n  }\n  if (dataSet != null) {\n    for (var dataProp in dataSet) {\n      if (hasOwnProperty.call(dataSet, dataProp)) {\n        var dataName = hyphenateString(dataProp);\n        var dataValue = dataSet[dataProp];\n        if (dataValue != null) {\n          domProps[\"data-\" + dataName] = dataValue;\n        }\n      }\n    }\n  }\n  var _focusable = focusable != null ? focusable : accessible;\n  if (_focusable === false) {\n    domProps.tabIndex = '-1';\n  }\n  if (elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n    if (_focusable === false || accessibilityDisabled === true) {\n      domProps.tabIndex = '-1';\n    }\n  } else if (role === 'button' || role === 'checkbox' || role === 'link' || role === 'radio' || role === 'textbox' || role === 'switch') {\n    if (_focusable !== false) {\n      domProps.tabIndex = '0';\n    }\n  } else {\n    if (_focusable === true) {\n      domProps.tabIndex = '0';\n    }\n  }\n  var reactNativeStyle = StyleSheet.compose(pointerEvents && pointerEventsStyles[pointerEvents], providedStyle);\n  var needsCursor = (role === 'button' || role === 'link') && !disabled;\n  var needsReset = elementType === 'a' || elementType === 'button' || elementType === 'li' || elementType === 'ul' || role === 'heading';\n  var finalClassList = [needsReset && classes.reset, needsCursor && classes.cursor, classList];\n  var _styleResolver$resolv = styleResolver.resolve(reactNativeStyle, finalClassList),\n    className = _styleResolver$resolv.className,\n    style = _styleResolver$resolv.style;\n  if (className != null && className !== '') {\n    domProps.className = className;\n  }\n  if (style) {\n    domProps.style = style;\n  }\n  if (nativeID != null) {\n    domProps.id = nativeID;\n  }\n  if (testID != null) {\n    domProps['data-testid'] = testID;\n  }\n  return domProps;\n};\nexport default createDOMProps;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","AccessibilityUtil","css","StyleSheet","styleResolver","STYLE_GROUPS","emptyObject","hasOwnProperty","prototype","isArray","Array","uppercasePattern","toHyphenLower","match","toLowerCase","hyphenateString","str","replace","processIDRefList","idRefList","join","classes","create","reset","backgroundColor","color","font","listStyle","margin","textAlign","textDecoration","cursor","classicReset","pointerEventsStyles","auto","pointerEvents","none","createDOMProps","elementType","props","_props","accessibilityActiveDescendant","accessibilityAtomic","accessibilityAutoComplete","accessibilityBusy","accessibilityChecked","accessibilityColumnCount","accessibilityColumnIndex","accessibilityColumnSpan","accessibilityControls","accessibilityCurrent","accessibilityDescribedBy","accessibilityDetails","accessibilityDisabled","accessibilityErrorMessage","accessibilityExpanded","accessibilityFlowTo","accessibilityHasPopup","accessibilityHidden","accessibilityInvalid","accessibilityKeyShortcuts","accessibilityLabel","accessibilityLabelledBy","accessibilityLevel","accessibilityLiveRegion","accessibilityModal","accessibilityMultiline","accessibilityMultiSelectable","accessibilityOrientation","accessibilityOwns","accessibilityPlaceholder","accessibilityPosInSet","accessibilityPressed","accessibilityReadOnly","accessibilityRequired","accessibilityRole","accessibilityRoleDescription","accessibilityRowCount","accessibilityRowIndex","accessibilityRowSpan","accessibilitySelected","accessibilitySetSize","accessibilitySort","accessibilityValueMax","accessibilityValueMin","accessibilityValueNow","accessibilityValueText","classList","dataSet","focusable","nativeID","providedStyle","style","testID","accessible","accessibilityState","accessibilityValue","domProps","disabled","role","propsToAriaRole","prop","value","_prop","_value","readOnly","required","dataProp","call","dataName","dataValue","_focusable","tabIndex","reactNativeStyle","compose","needsCursor","needsReset","finalClassList","_styleResolver$resolv","resolve","className","id"],"sources":["/Users/jeko/Documents/Reactive-4twiggers-animation/node_modules/react-native-web/dist/modules/createDOMProps/index.js"],"sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport AccessibilityUtil from '../AccessibilityUtil';\nimport css from '../../exports/StyleSheet/css';\nimport StyleSheet from '../../exports/StyleSheet';\nimport styleResolver from '../../exports/StyleSheet/styleResolver';\nimport { STYLE_GROUPS } from '../../exports/StyleSheet/constants';\nvar emptyObject = {};\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\nvar uppercasePattern = /[A-Z]/g;\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase();\n}\n\nfunction hyphenateString(str) {\n  return str.replace(uppercasePattern, toHyphenLower);\n}\n\nfunction processIDRefList(idRefList) {\n  return isArray(idRefList) ? idRefList.join(' ') : idRefList;\n} // Reset styles for heading, link, and list DOM elements\n\n\nvar classes = css.create({\n  reset: {\n    backgroundColor: 'transparent',\n    color: 'inherit',\n    font: 'inherit',\n    listStyle: 'none',\n    margin: 0,\n    textAlign: 'inherit',\n    textDecoration: 'none'\n  },\n  cursor: {\n    cursor: 'pointer'\n  }\n}, STYLE_GROUPS.classicReset);\nvar pointerEventsStyles = StyleSheet.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\n\nvar createDOMProps = function createDOMProps(elementType, props) {\n  if (!props) {\n    props = emptyObject;\n  }\n\n  var _props = props,\n      accessibilityActiveDescendant = _props.accessibilityActiveDescendant,\n      accessibilityAtomic = _props.accessibilityAtomic,\n      accessibilityAutoComplete = _props.accessibilityAutoComplete,\n      accessibilityBusy = _props.accessibilityBusy,\n      accessibilityChecked = _props.accessibilityChecked,\n      accessibilityColumnCount = _props.accessibilityColumnCount,\n      accessibilityColumnIndex = _props.accessibilityColumnIndex,\n      accessibilityColumnSpan = _props.accessibilityColumnSpan,\n      accessibilityControls = _props.accessibilityControls,\n      accessibilityCurrent = _props.accessibilityCurrent,\n      accessibilityDescribedBy = _props.accessibilityDescribedBy,\n      accessibilityDetails = _props.accessibilityDetails,\n      accessibilityDisabled = _props.accessibilityDisabled,\n      accessibilityErrorMessage = _props.accessibilityErrorMessage,\n      accessibilityExpanded = _props.accessibilityExpanded,\n      accessibilityFlowTo = _props.accessibilityFlowTo,\n      accessibilityHasPopup = _props.accessibilityHasPopup,\n      accessibilityHidden = _props.accessibilityHidden,\n      accessibilityInvalid = _props.accessibilityInvalid,\n      accessibilityKeyShortcuts = _props.accessibilityKeyShortcuts,\n      accessibilityLabel = _props.accessibilityLabel,\n      accessibilityLabelledBy = _props.accessibilityLabelledBy,\n      accessibilityLevel = _props.accessibilityLevel,\n      accessibilityLiveRegion = _props.accessibilityLiveRegion,\n      accessibilityModal = _props.accessibilityModal,\n      accessibilityMultiline = _props.accessibilityMultiline,\n      accessibilityMultiSelectable = _props.accessibilityMultiSelectable,\n      accessibilityOrientation = _props.accessibilityOrientation,\n      accessibilityOwns = _props.accessibilityOwns,\n      accessibilityPlaceholder = _props.accessibilityPlaceholder,\n      accessibilityPosInSet = _props.accessibilityPosInSet,\n      accessibilityPressed = _props.accessibilityPressed,\n      accessibilityReadOnly = _props.accessibilityReadOnly,\n      accessibilityRequired = _props.accessibilityRequired,\n      accessibilityRole = _props.accessibilityRole,\n      accessibilityRoleDescription = _props.accessibilityRoleDescription,\n      accessibilityRowCount = _props.accessibilityRowCount,\n      accessibilityRowIndex = _props.accessibilityRowIndex,\n      accessibilityRowSpan = _props.accessibilityRowSpan,\n      accessibilitySelected = _props.accessibilitySelected,\n      accessibilitySetSize = _props.accessibilitySetSize,\n      accessibilitySort = _props.accessibilitySort,\n      accessibilityValueMax = _props.accessibilityValueMax,\n      accessibilityValueMin = _props.accessibilityValueMin,\n      accessibilityValueNow = _props.accessibilityValueNow,\n      accessibilityValueText = _props.accessibilityValueText,\n      classList = _props.classList,\n      dataSet = _props.dataSet,\n      focusable = _props.focusable,\n      nativeID = _props.nativeID,\n      pointerEvents = _props.pointerEvents,\n      providedStyle = _props.style,\n      testID = _props.testID,\n      accessible = _props.accessible,\n      accessibilityState = _props.accessibilityState,\n      accessibilityValue = _props.accessibilityValue,\n      domProps = _objectWithoutPropertiesLoose(_props, [\"accessibilityActiveDescendant\", \"accessibilityAtomic\", \"accessibilityAutoComplete\", \"accessibilityBusy\", \"accessibilityChecked\", \"accessibilityColumnCount\", \"accessibilityColumnIndex\", \"accessibilityColumnSpan\", \"accessibilityControls\", \"accessibilityCurrent\", \"accessibilityDescribedBy\", \"accessibilityDetails\", \"accessibilityDisabled\", \"accessibilityErrorMessage\", \"accessibilityExpanded\", \"accessibilityFlowTo\", \"accessibilityHasPopup\", \"accessibilityHidden\", \"accessibilityInvalid\", \"accessibilityKeyShortcuts\", \"accessibilityLabel\", \"accessibilityLabelledBy\", \"accessibilityLevel\", \"accessibilityLiveRegion\", \"accessibilityModal\", \"accessibilityMultiline\", \"accessibilityMultiSelectable\", \"accessibilityOrientation\", \"accessibilityOwns\", \"accessibilityPlaceholder\", \"accessibilityPosInSet\", \"accessibilityPressed\", \"accessibilityReadOnly\", \"accessibilityRequired\", \"accessibilityRole\", \"accessibilityRoleDescription\", \"accessibilityRowCount\", \"accessibilityRowIndex\", \"accessibilityRowSpan\", \"accessibilitySelected\", \"accessibilitySetSize\", \"accessibilitySort\", \"accessibilityValueMax\", \"accessibilityValueMin\", \"accessibilityValueNow\", \"accessibilityValueText\", \"classList\", \"dataSet\", \"focusable\", \"nativeID\", \"pointerEvents\", \"style\", \"testID\", \"accessible\", \"accessibilityState\", \"accessibilityValue\"]);\n\n  var disabled = accessibilityState != null && accessibilityState.disabled === true || accessibilityDisabled;\n  var role = AccessibilityUtil.propsToAriaRole(props); // DEPRECATED\n\n  if (accessibilityState != null) {\n    for (var prop in accessibilityState) {\n      var value = accessibilityState[prop];\n\n      if (value != null) {\n        if (prop === 'disabled' || prop === 'hidden') {\n          if (value === true) {\n            domProps[\"aria-\" + prop] = value; // also set prop directly to pick up host elementType behaviour\n\n            domProps[prop] = value;\n          }\n        } else {\n          domProps[\"aria-\" + prop] = value;\n        }\n      }\n    }\n  }\n\n  if (accessibilityValue != null) {\n    for (var _prop in accessibilityValue) {\n      var _value = accessibilityValue[_prop];\n\n      if (_value != null) {\n        domProps[\"aria-value\" + _prop] = _value;\n      }\n    }\n  } // ACCESSIBILITY\n\n\n  if (accessibilityActiveDescendant != null) {\n    domProps['aria-activedescendant'] = accessibilityActiveDescendant;\n  }\n\n  if (accessibilityAtomic != null) {\n    domProps['aria-atomic'] = accessibilityAtomic;\n  }\n\n  if (accessibilityAutoComplete != null) {\n    domProps['aria-autocomplete'] = accessibilityAutoComplete;\n  }\n\n  if (accessibilityBusy != null) {\n    domProps['aria-busy'] = accessibilityBusy;\n  }\n\n  if (accessibilityChecked != null) {\n    domProps['aria-checked'] = accessibilityChecked;\n  }\n\n  if (accessibilityColumnCount != null) {\n    domProps['aria-colcount'] = accessibilityColumnCount;\n  }\n\n  if (accessibilityColumnIndex != null) {\n    domProps['aria-colindex'] = accessibilityColumnIndex;\n  }\n\n  if (accessibilityColumnSpan != null) {\n    domProps['aria-colspan'] = accessibilityColumnSpan;\n  }\n\n  if (accessibilityControls != null) {\n    domProps['aria-controls'] = processIDRefList(accessibilityControls);\n  }\n\n  if (accessibilityCurrent != null) {\n    domProps['aria-current'] = accessibilityCurrent;\n  }\n\n  if (accessibilityDescribedBy != null) {\n    domProps['aria-describedby'] = processIDRefList(accessibilityDescribedBy);\n  }\n\n  if (accessibilityDetails != null) {\n    domProps['aria-details'] = accessibilityDetails;\n  }\n\n  if (disabled === true) {\n    domProps['aria-disabled'] = true; // Enhance with native semantics\n\n    if (elementType === 'button' || elementType === 'form' || elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.disabled = true;\n    }\n  }\n\n  if (accessibilityErrorMessage != null) {\n    domProps['aria-errormessage'] = accessibilityErrorMessage;\n  }\n\n  if (accessibilityExpanded != null) {\n    domProps['aria-expanded'] = accessibilityExpanded;\n  }\n\n  if (accessibilityFlowTo != null) {\n    domProps['aria-flowto'] = processIDRefList(accessibilityFlowTo);\n  }\n\n  if (accessibilityHasPopup != null) {\n    domProps['aria-haspopup'] = accessibilityHasPopup;\n  }\n\n  if (accessibilityHidden === true) {\n    domProps['aria-hidden'] = accessibilityHidden;\n  }\n\n  if (accessibilityInvalid != null) {\n    domProps['aria-invalid'] = accessibilityInvalid;\n  }\n\n  if (accessibilityKeyShortcuts != null && Array.isArray(accessibilityKeyShortcuts)) {\n    domProps['aria-keyshortcuts'] = accessibilityKeyShortcuts.join(' ');\n  }\n\n  if (accessibilityLabel != null) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n\n  if (accessibilityLabelledBy != null) {\n    domProps['aria-labelledby'] = processIDRefList(accessibilityLabelledBy);\n  }\n\n  if (accessibilityLevel != null) {\n    domProps['aria-level'] = accessibilityLevel;\n  }\n\n  if (accessibilityLiveRegion != null) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n\n  if (accessibilityModal != null) {\n    domProps['aria-modal'] = accessibilityModal;\n  }\n\n  if (accessibilityMultiline != null) {\n    domProps['aria-multiline'] = accessibilityMultiline;\n  }\n\n  if (accessibilityMultiSelectable != null) {\n    domProps['aria-multiselectable'] = accessibilityMultiSelectable;\n  }\n\n  if (accessibilityOrientation != null) {\n    domProps['aria-orientation'] = accessibilityOrientation;\n  }\n\n  if (accessibilityOwns != null) {\n    domProps['aria-owns'] = processIDRefList(accessibilityOwns);\n  }\n\n  if (accessibilityPlaceholder != null) {\n    domProps['aria-placeholder'] = accessibilityPlaceholder;\n  }\n\n  if (accessibilityPosInSet != null) {\n    domProps['aria-posinset'] = accessibilityPosInSet;\n  }\n\n  if (accessibilityPressed != null) {\n    domProps['aria-pressed'] = accessibilityPressed;\n  }\n\n  if (accessibilityReadOnly != null) {\n    domProps['aria-readonly'] = accessibilityReadOnly; // Enhance with native semantics\n\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.readOnly = true;\n    }\n  }\n\n  if (accessibilityRequired != null) {\n    domProps['aria-required'] = accessibilityRequired; // Enhance with native semantics\n\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.required = true;\n    }\n  }\n\n  if (role != null) {\n    // 'presentation' synonym has wider browser support\n    domProps['role'] = role === 'none' ? 'presentation' : role;\n  }\n\n  if (accessibilityRoleDescription != null) {\n    domProps['aria-roledescription'] = accessibilityRoleDescription;\n  }\n\n  if (accessibilityRowCount != null) {\n    domProps['aria-rowcount'] = accessibilityRowCount;\n  }\n\n  if (accessibilityRowIndex != null) {\n    domProps['aria-rowindex'] = accessibilityRowIndex;\n  }\n\n  if (accessibilityRowSpan != null) {\n    domProps['aria-rowspan'] = accessibilityRowSpan;\n  }\n\n  if (accessibilitySelected != null) {\n    domProps['aria-selected'] = accessibilitySelected;\n  }\n\n  if (accessibilitySetSize != null) {\n    domProps['aria-setsize'] = accessibilitySetSize;\n  }\n\n  if (accessibilitySort != null) {\n    domProps['aria-sort'] = accessibilitySort;\n  }\n\n  if (accessibilityValueMax != null) {\n    domProps['aria-valuemax'] = accessibilityValueMax;\n  }\n\n  if (accessibilityValueMin != null) {\n    domProps['aria-valuemin'] = accessibilityValueMin;\n  }\n\n  if (accessibilityValueNow != null) {\n    domProps['aria-valuenow'] = accessibilityValueNow;\n  }\n\n  if (accessibilityValueText != null) {\n    domProps['aria-valuetext'] = accessibilityValueText;\n  } // \"dataSet\" replaced with \"data-*\"\n\n\n  if (dataSet != null) {\n    for (var dataProp in dataSet) {\n      if (hasOwnProperty.call(dataSet, dataProp)) {\n        var dataName = hyphenateString(dataProp);\n        var dataValue = dataSet[dataProp];\n\n        if (dataValue != null) {\n          domProps[\"data-\" + dataName] = dataValue;\n        }\n      }\n    }\n  } // FOCUS\n  // \"focusable\" indicates that an element may be a keyboard tab-stop.\n\n\n  var _focusable = focusable != null ? focusable : accessible;\n\n  if (_focusable === false) {\n    domProps.tabIndex = '-1';\n  }\n\n  if ( // These native elements are focusable by default\n  elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n    if (_focusable === false || accessibilityDisabled === true) {\n      domProps.tabIndex = '-1';\n    }\n  } else if ( // These roles are made focusable by default\n  role === 'button' || role === 'checkbox' || role === 'link' || role === 'radio' || role === 'textbox' || role === 'switch') {\n    if (_focusable !== false) {\n      domProps.tabIndex = '0';\n    }\n  } else {\n    // Everything else must explicitly set the prop\n    if (_focusable === true) {\n      domProps.tabIndex = '0';\n    }\n  } // STYLE\n\n\n  var reactNativeStyle = StyleSheet.compose(pointerEvents && pointerEventsStyles[pointerEvents], providedStyle); // Additional style resets for interactive elements\n\n  var needsCursor = (role === 'button' || role === 'link') && !disabled;\n  var needsReset = elementType === 'a' || elementType === 'button' || elementType === 'li' || elementType === 'ul' || role === 'heading'; // Classic CSS styles\n\n  var finalClassList = [needsReset && classes.reset, needsCursor && classes.cursor, classList]; // Resolve styles\n\n  var _styleResolver$resolv = styleResolver.resolve(reactNativeStyle, finalClassList),\n      className = _styleResolver$resolv.className,\n      style = _styleResolver$resolv.style;\n\n  if (className != null && className !== '') {\n    domProps.className = className;\n  }\n\n  if (style) {\n    domProps.style = style;\n  } // OTHER\n  // Native element ID\n\n\n  if (nativeID != null) {\n    domProps.id = nativeID;\n  } // Automated test IDs\n\n\n  if (testID != null) {\n    domProps['data-testid'] = testID;\n  }\n\n  return domProps;\n};\n\nexport default createDOMProps;"],"mappings":"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"},"metadata":{},"sourceType":"module"}