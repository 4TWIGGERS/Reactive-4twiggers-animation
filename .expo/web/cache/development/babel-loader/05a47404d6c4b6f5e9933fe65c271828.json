{"ast":null,"code":"import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\nvar dimensions = {\n  window: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  },\n  screen: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  }\n};\nvar listeners = {};\nvar Dimensions = function () {\n  function Dimensions() {}\n  Dimensions.get = function get(dimension) {\n    invariant(dimensions[dimension], \"No dimension set for key \" + dimension);\n    return dimensions[dimension];\n  };\n  Dimensions.set = function set(initialDimensions) {\n    if (initialDimensions) {\n      if (canUseDOM) {\n        invariant(false, 'Dimensions cannot be set in the browser');\n      } else {\n        if (initialDimensions.screen != null) {\n          dimensions.screen = initialDimensions.screen;\n        }\n        if (initialDimensions.window != null) {\n          dimensions.window = initialDimensions.window;\n        }\n      }\n    }\n  };\n  Dimensions._update = function _update() {\n    if (!canUseDOM) {\n      return;\n    }\n    var win = window;\n    var docEl = win.document.documentElement;\n    dimensions.window = {\n      fontScale: 1,\n      height: docEl.clientHeight,\n      scale: win.devicePixelRatio || 1,\n      width: docEl.clientWidth\n    };\n    dimensions.screen = {\n      fontScale: 1,\n      height: win.screen.height,\n      scale: win.devicePixelRatio || 1,\n      width: win.screen.width\n    };\n    if (Array.isArray(listeners['change'])) {\n      listeners['change'].forEach(function (handler) {\n        return handler(dimensions);\n      });\n    }\n  };\n  Dimensions.addEventListener = function addEventListener(type, handler) {\n    var _this = this;\n    listeners[type] = listeners[type] || [];\n    listeners[type].push(handler);\n    return {\n      remove: function remove() {\n        _this.removeEventListener(type, handler);\n      }\n    };\n  };\n  Dimensions.removeEventListener = function removeEventListener(type, handler) {\n    if (Array.isArray(listeners[type])) {\n      listeners[type] = listeners[type].filter(function (_handler) {\n        return _handler !== handler;\n      });\n    }\n  };\n  return Dimensions;\n}();\nexport { Dimensions as default };\nif (canUseDOM) {\n  Dimensions._update();\n  window.addEventListener('resize', Dimensions._update, false);\n}","map":{"version":3,"names":["canUseDOM","invariant","dimensions","window","fontScale","height","scale","width","screen","listeners","Dimensions","get","dimension","set","initialDimensions","_update","win","docEl","document","documentElement","clientHeight","devicePixelRatio","clientWidth","Array","isArray","forEach","handler","addEventListener","type","_this","push","remove","removeEventListener","filter","_handler","default"],"sources":["/Users/jeko/Documents/Reactive-4twiggers-animation/node_modules/react-native-web/dist/exports/Dimensions/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\nvar dimensions = {\n  window: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  },\n  screen: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  }\n};\nvar listeners = {};\n\nvar Dimensions = /*#__PURE__*/function () {\n  function Dimensions() {}\n\n  Dimensions.get = function get(dimension) {\n    invariant(dimensions[dimension], \"No dimension set for key \" + dimension);\n    return dimensions[dimension];\n  };\n\n  Dimensions.set = function set(initialDimensions) {\n    if (initialDimensions) {\n      if (canUseDOM) {\n        invariant(false, 'Dimensions cannot be set in the browser');\n      } else {\n        if (initialDimensions.screen != null) {\n          dimensions.screen = initialDimensions.screen;\n        }\n\n        if (initialDimensions.window != null) {\n          dimensions.window = initialDimensions.window;\n        }\n      }\n    }\n  };\n\n  Dimensions._update = function _update() {\n    if (!canUseDOM) {\n      return;\n    }\n\n    var win = window;\n    var docEl = win.document.documentElement;\n    dimensions.window = {\n      fontScale: 1,\n      height: docEl.clientHeight,\n      scale: win.devicePixelRatio || 1,\n      width: docEl.clientWidth\n    };\n    dimensions.screen = {\n      fontScale: 1,\n      height: win.screen.height,\n      scale: win.devicePixelRatio || 1,\n      width: win.screen.width\n    };\n\n    if (Array.isArray(listeners['change'])) {\n      listeners['change'].forEach(function (handler) {\n        return handler(dimensions);\n      });\n    }\n  };\n\n  Dimensions.addEventListener = function addEventListener(type, handler) {\n    var _this = this;\n\n    listeners[type] = listeners[type] || [];\n    listeners[type].push(handler);\n    return {\n      remove: function remove() {\n        _this.removeEventListener(type, handler);\n      }\n    };\n  };\n\n  Dimensions.removeEventListener = function removeEventListener(type, handler) {\n    if (Array.isArray(listeners[type])) {\n      listeners[type] = listeners[type].filter(function (_handler) {\n        return _handler !== handler;\n      });\n    }\n  };\n\n  return Dimensions;\n}();\n\nexport { Dimensions as default };\n\nif (canUseDOM) {\n  Dimensions._update();\n\n  window.addEventListener('resize', Dimensions._update, false);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}