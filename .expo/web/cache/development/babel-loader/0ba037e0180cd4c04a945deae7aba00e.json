{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport AnimatedNode, { getCallID, setCallID } from \"./AnimatedNode\";\nimport { adapt } from \"./AnimatedBlock\";\nimport { val } from \"../val\";\nimport invariant from 'invariant';\nvar AnimatedCallFunc = function (_AnimatedNode) {\n  _inherits(AnimatedCallFunc, _AnimatedNode);\n  var _super = _createSuper(AnimatedCallFunc);\n  function AnimatedCallFunc(what, args, params) {\n    var _this;\n    _classCallCheck(this, AnimatedCallFunc);\n    invariant(what instanceof AnimatedNode, \"Reanimated: AnimatedCallFunc 'what' argument should be of type AnimatedNode but got \" + what);\n    invariant(args.every(function (el) {\n      return el instanceof AnimatedNode;\n    }), \"Reanimated: every AnimatedCallFunc 'args' argument should be of type AnimatedNode but got \" + args);\n    invariant(params.every(function (el) {\n      return el instanceof AnimatedNode;\n    }), \"Reanimated: every AnimatedCallFunc 'params' argument should be of type AnimatedNode but got \" + params);\n    _this = _super.call(this, {\n      type: 'callfunc',\n      what: what,\n      args: args,\n      params: params\n    }, _toConsumableArray(args));\n    _this._what = what;\n    _this._args = args;\n    _this._params = params;\n    return _this;\n  }\n  _createClass(AnimatedCallFunc, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedCallFunc, id: \" + this.__nodeID;\n    }\n  }, {\n    key: \"beginContext\",\n    value: function beginContext() {\n      var _this2 = this;\n      this._previousCallID = getCallID();\n      setCallID(getCallID() + '/' + this.__nodeID);\n      this._params.forEach(function (param, index) {\n        param.beginContext(_this2._args[index], _this2._previousCallID);\n      });\n    }\n  }, {\n    key: \"endContext\",\n    value: function endContext() {\n      this._params.forEach(function (param) {\n        param.endContext();\n      });\n      setCallID(this._previousCallID);\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      this.beginContext();\n      var value = val(this._what);\n      this.endContext();\n      return value;\n    }\n  }]);\n  return AnimatedCallFunc;\n}(AnimatedNode);\nexport function createAnimatedCallFunc(proc, args, params) {\n  return new AnimatedCallFunc(proc, args.map(function (p) {\n    return adapt(p);\n  }), params);\n}","map":{"version":3,"names":["AnimatedNode","getCallID","setCallID","adapt","val","invariant","AnimatedCallFunc","what","args","params","every","el","type","_what","_args","_params","__nodeID","_previousCallID","forEach","param","index","beginContext","endContext","value","createAnimatedCallFunc","proc","map","p"],"sources":["/Users/jeko/Documents/Reactive-4twiggers-animation/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedCallFunc.js"],"sourcesContent":["import AnimatedNode, { getCallID, setCallID } from './AnimatedNode';\nimport { adapt } from './AnimatedBlock';\nimport { val } from '../val';\nimport invariant from 'invariant';\n\nclass AnimatedCallFunc extends AnimatedNode {\n  _previousCallID;\n  _what;\n  _args;\n  _params;\n  constructor(what, args, params) {\n    invariant(\n      what instanceof AnimatedNode,\n      `Reanimated: AnimatedCallFunc 'what' argument should be of type AnimatedNode but got ${what}`\n    );\n    invariant(\n      args.every((el) => el instanceof AnimatedNode),\n      `Reanimated: every AnimatedCallFunc 'args' argument should be of type AnimatedNode but got ${args}`\n    );\n    invariant(\n      params.every((el) => el instanceof AnimatedNode),\n      `Reanimated: every AnimatedCallFunc 'params' argument should be of type AnimatedNode but got ${params}`\n    );\n    super(\n      {\n        type: 'callfunc',\n        what,\n        args,\n        params,\n      },\n      [...args]\n    );\n    this._what = what;\n    this._args = args;\n    this._params = params;\n  }\n\n  toString() {\n    return `AnimatedCallFunc, id: ${this.__nodeID}`;\n  }\n\n  beginContext() {\n    this._previousCallID = getCallID();\n    setCallID(getCallID() + '/' + this.__nodeID);\n\n    this._params.forEach((param, index) => {\n      param.beginContext(this._args[index], this._previousCallID);\n    });\n  }\n\n  endContext() {\n    this._params.forEach((param) => {\n      param.endContext();\n    });\n    setCallID(this._previousCallID);\n  }\n\n  __onEvaluate() {\n    this.beginContext();\n    const value = val(this._what);\n    this.endContext();\n    return value;\n  }\n}\n\nexport function createAnimatedCallFunc(proc, args, params) {\n  return new AnimatedCallFunc(\n    proc,\n    args.map((p) => adapt(p)),\n    params\n  );\n}\n"],"mappings":";;;;;;;;AAAA,OAAOA,YAAY,IAAIC,SAAS,EAAEC,SAAS;AAC3C,SAASC,KAAK;AACd,SAASC,GAAG;AACZ,OAAOC,SAAS,MAAM,WAAW;AAAC,IAE5BC,gBAAgB;EAAA;EAAA;EAKpB,0BAAYC,IAAI,EAAEC,IAAI,EAAEC,MAAM,EAAE;IAAA;IAAA;IAC9BJ,SAAS,CACPE,IAAI,YAAYP,YAAY,2FAC2DO,IAAI,CAC5F;IACDF,SAAS,CACPG,IAAI,CAACE,KAAK,CAAC,UAACC,EAAE;MAAA,OAAKA,EAAE,YAAYX,YAAY;IAAA,EAAC,iGAC+CQ,IAAI,CAClG;IACDH,SAAS,CACPI,MAAM,CAACC,KAAK,CAAC,UAACC,EAAE;MAAA,OAAKA,EAAE,YAAYX,YAAY;IAAA,EAAC,mGAC+CS,MAAM,CACtG;IACD,0BACE;MACEG,IAAI,EAAE,UAAU;MAChBL,IAAI,EAAJA,IAAI;MACJC,IAAI,EAAJA,IAAI;MACJC,MAAM,EAANA;IACF,CAAC,qBACGD,IAAI;IAEV,MAAKK,KAAK,GAAGN,IAAI;IACjB,MAAKO,KAAK,GAAGN,IAAI;IACjB,MAAKO,OAAO,GAAGN,MAAM;IAAC;EACxB;EAAC;IAAA;IAAA,OAED,oBAAW;MACT,kCAAgC,IAAI,CAACO,QAAQ;IAC/C;EAAC;IAAA;IAAA,OAED,wBAAe;MAAA;MACb,IAAI,CAACC,eAAe,GAAGhB,SAAS,EAAE;MAClCC,SAAS,CAACD,SAAS,EAAE,GAAG,GAAG,GAAG,IAAI,CAACe,QAAQ,CAAC;MAE5C,IAAI,CAACD,OAAO,CAACG,OAAO,CAAC,UAACC,KAAK,EAAEC,KAAK,EAAK;QACrCD,KAAK,CAACE,YAAY,CAAC,MAAI,CAACP,KAAK,CAACM,KAAK,CAAC,EAAE,MAAI,CAACH,eAAe,CAAC;MAC7D,CAAC,CAAC;IACJ;EAAC;IAAA;IAAA,OAED,sBAAa;MACX,IAAI,CAACF,OAAO,CAACG,OAAO,CAAC,UAACC,KAAK,EAAK;QAC9BA,KAAK,CAACG,UAAU,EAAE;MACpB,CAAC,CAAC;MACFpB,SAAS,CAAC,IAAI,CAACe,eAAe,CAAC;IACjC;EAAC;IAAA;IAAA,OAED,wBAAe;MACb,IAAI,CAACI,YAAY,EAAE;MACnB,IAAME,KAAK,GAAGnB,GAAG,CAAC,IAAI,CAACS,KAAK,CAAC;MAC7B,IAAI,CAACS,UAAU,EAAE;MACjB,OAAOC,KAAK;IACd;EAAC;EAAA;AAAA,EAzD4BvB,YAAY;AA4D3C,OAAO,SAASwB,sBAAsB,CAACC,IAAI,EAAEjB,IAAI,EAAEC,MAAM,EAAE;EACzD,OAAO,IAAIH,gBAAgB,CACzBmB,IAAI,EACJjB,IAAI,CAACkB,GAAG,CAAC,UAACC,CAAC;IAAA,OAAKxB,KAAK,CAACwB,CAAC,CAAC;EAAA,EAAC,EACzBlB,MAAM,CACP;AACH"},"metadata":{},"sourceType":"module"}