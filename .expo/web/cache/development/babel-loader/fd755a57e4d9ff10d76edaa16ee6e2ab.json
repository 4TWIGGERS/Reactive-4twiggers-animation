{"ast":null,"code":"import createHandler from \"./createHandler\";\nimport { baseGestureHandlerProps } from \"./gestureHandlerCommon\";\nexport var PinchGestureHandler = createHandler({\n  name: 'PinchGestureHandler',\n  allowedProps: baseGestureHandlerProps,\n  config: {}\n});","map":{"version":3,"mappings":"AAAA,OAAOA,aAAP;AACA,SAEEC,uBAFF;AAqCA,OAAO,IAAMC,mBAAmB,GAAGF,aAAa,CAG9C;EACAG,IAAI,EAAE,qBADN;EAEAC,YAAY,EAAEH,uBAFd;EAGAI,MAAM,EAAE;AAHR,CAH8C,CAAzC","names":["createHandler","baseGestureHandlerProps","PinchGestureHandler","name","allowedProps","config"],"sources":["PinchGestureHandler.ts"],"sourcesContent":["import createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport type PinchGestureHandlerEventPayload = {\n  /**\n   * The scale factor relative to the points of the two touches in screen\n   * coordinates.\n   */\n  scale: number;\n\n  /**\n   * Position expressed in points along X axis of center anchor point of\n   * gesture.\n   */\n  focalX: number;\n\n  /**\n   * Position expressed in points along Y axis of center anchor point of\n   * gesture.\n   */\n  focalY: number;\n\n  /**\n   *\n   * Velocity of the pan gesture the current moment. The value is expressed in\n   * point units per second.\n   */\n  velocity: number;\n};\n\nexport interface PinchGestureHandlerProps\n  extends BaseGestureHandlerProps<PinchGestureHandlerEventPayload> {}\n\nexport type PinchGestureHandler = typeof PinchGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const PinchGestureHandler = createHandler<\n  PinchGestureHandlerProps,\n  PinchGestureHandlerEventPayload\n>({\n  name: 'PinchGestureHandler',\n  allowedProps: baseGestureHandlerProps,\n  config: {},\n});\n"]},"metadata":{},"sourceType":"module"}