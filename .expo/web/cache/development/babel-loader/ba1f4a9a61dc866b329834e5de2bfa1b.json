{"ast":null,"code":"import processColor from \"react-native-web/dist/exports/processColor\";\nvar isWebColor = function isWebColor(color) {\n  return color === 'currentcolor' || color === 'currentColor' || color === 'inherit' || color.indexOf('var(') === 0;\n};\nexport function normalizeColor(color) {\n  var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  if (color == null) return;\n  if (typeof color === 'string' && isWebColor(color)) {\n    return color;\n  }\n  var colorInt = processColor(color);\n  if (colorInt != null) {\n    var r = colorInt >> 16 & 255;\n    var g = colorInt >> 8 & 255;\n    var b = colorInt & 255;\n    var a = (colorInt >> 24 & 255) / 255;\n    var alpha = (a * opacity).toFixed(2);\n    return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\n  }\n}","map":{"version":3,"mappings":";AASA,IAAMA,UAAU,GAAG,SAAbA,UAAU,CAAIC,KAAa;EAAA,OAC/BA,KAAK,KAAK,cAAc,IACxBA,KAAK,KAAK,cAAc,IACxBA,KAAK,KAAK,SAAS,IACnBA,KAAK,CAACC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;AAAA;AAE7B,OAAM,SAAUC,cAAc,CAACF,KAAuB,EAAqB;EAAA,IAAnBG,8EAAkB,CAAC;EACzE,IAAIH,KAAK,IAAI,IAAI,EAAE;EAEnB,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAID,UAAU,CAACC,KAAK,CAAC,EAAE;IAClD,OAAOA,KAAK;;EAGd,IAAMI,QAAQ,GAAGC,YAAY,CAACL,KAAK,CAAuB;EAC1D,IAAII,QAAQ,IAAI,IAAI,EAAE;IACpB,IAAME,CAAC,GAAIF,QAAQ,IAAI,EAAE,GAAI,GAAG;IAChC,IAAMG,CAAC,GAAIH,QAAQ,IAAI,CAAC,GAAI,GAAG;IAC/B,IAAMI,CAAC,GAAGJ,QAAQ,GAAG,GAAG;IACxB,IAAMK,CAAC,GAAG,CAAEL,QAAQ,IAAI,EAAE,GAAI,GAAG,IAAI,GAAG;IACxC,IAAMM,KAAK,GAAG,CAACD,CAAC,GAAGN,OAAO,EAAEQ,OAAO,CAAC,CAAC,CAAC;IACtC,iBAAeL,CAAC,SAAIC,CAAC,SAAIC,CAAC,SAAIE,KAAK;;AAEvC","names":["isWebColor","color","indexOf","normalizeColor","opacity","colorInt","processColor","r","g","b","a","alpha","toFixed"],"sourceRoot":"","sources":["../src/normalizeColor.ts"],"sourcesContent":["/**\n * Copyright (c) Expo.\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { processColor } from 'react-native';\n\nconst isWebColor = (color: string): boolean =>\n  color === 'currentcolor' ||\n  color === 'currentColor' ||\n  color === 'inherit' ||\n  color.indexOf('var(') === 0;\n\nexport function normalizeColor(color?: number | string, opacity: number = 1): void | string {\n  if (color == null) return;\n\n  if (typeof color === 'string' && isWebColor(color)) {\n    return color;\n  }\n\n  const colorInt = processColor(color) as number | undefined;\n  if (colorInt != null) {\n    const r = (colorInt >> 16) & 255;\n    const g = (colorInt >> 8) & 255;\n    const b = colorInt & 255;\n    const a = ((colorInt >> 24) & 255) / 255;\n    const alpha = (a * opacity).toFixed(2);\n    return `rgba(${r},${g},${b},${alpha})`;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}