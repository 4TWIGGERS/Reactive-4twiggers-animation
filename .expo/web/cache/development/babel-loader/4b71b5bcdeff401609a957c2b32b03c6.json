{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nexport default React.forwardRef(function (props, ref) {\n  return React.createElement(View, _extends({\n    ref: ref,\n    accessibilityRole: \"button\"\n  }, props));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAGA,eAAeA,KAAK,CAACC,UAAN,CAAuB,UAACC,KAAD,EAAQC,GAAR;EAAA,OACpCH,oBAACI,IAAD;IAAMD,GAAG,EAAEA,GAAX;IAAgBE,iBAAiB,EAAC;EAAlC,GAA+CH,KAA/C,EADa;AAAA,EAAf","names":["React","forwardRef","props","ref","View","accessibilityRole"],"sources":["GestureHandlerButton.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\n\nexport default React.forwardRef<View>((props, ref) => (\n  <View ref={ref} accessibilityRole=\"button\" {...props} />\n));\n"]},"metadata":{},"sourceType":"module"}